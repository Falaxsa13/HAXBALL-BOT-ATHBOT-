// Stats: "Auth" : '["0-Games", "1-Wins", "2-Draws", "3-Losses", "4-Winrate", "5-Goals", "6-Assists", "7-GK", "8-CS", "9-CS%", "10- ELO", "11-Role", "12-Nick"]'

/* VARIABLES */

/* ROOM */

const Bot = "ATH BOT: "; // Bot's name

// GLOBAL VARIABLES //
const roomName = "💎FUTSAL X4 | ATHBOT 💎";
const botName = "Uteclaxsa BOT";
const maxPlayers = 50;
const roomPublic = false;

// GEOLOCALIZATION //
const geo = [{"code": "PE", "lat": -12.1, "lon": -76.9}];

// Admin password //
var adminPassword = 130422102703;

const room = HBInit({ roomName: roomName, maxPlayers: maxPlayers, public: roomPublic, playerName: botName, geo: geo[0] });

// GAME SETTINGS //
const scoreLimitClassic = 3;
const scoreLimitBig = 3;
const timeLimitClassic = 4;
const timeLimitBig = 4;

room.setTeamsLock(true);


var player_size = 10;


/* STADIUM */

const playerRadius = 15;
const ballRadius = 6.25;
const triggerDistance = playerRadius + ballRadius + 0.01;
const aloneMap = '{"name":"Futsal No Goals from HaxMaps","width":420,"height":200,"spawnDistance":180,"bg":{"type":"hockey","width":368,"height":171,"kickOffRadius":65,"cornerRadius":0},"vertexes":[{"x":-368,"y":171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":-368,"y":65,"trait":"ballArea","cMask":["ball"],"bCoef":1,"_selected":"segment"},{"x":-368,"y":-65,"trait":"ballArea","cMask":["ball"],"bCoef":1,"_selected":"segment"},{"x":-368,"y":-171,"trait":"ballArea","bCoef":1,"cMask":["ball"]},{"x":368,"y":171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":368,"y":65,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":368,"y":-65,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":368,"y":-171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":0,"y":65,"trait":"kickOffBarrier"},{"x":0,"y":-65,"trait":"line"},{"bCoef":1,"trait":"ballArea","x":368,"y":171},{"bCoef":1,"trait":"ballArea","x":368,"y":-171},{"bCoef":0,"trait":"line","x":0,"y":171},{"bCoef":0,"trait":"line","x":0,"y":-171},{"x":0,"y":65,"trait":"kickOffBarrier"},{"x":0,"y":-65,"trait":"kickOffBarrier"},{"x":377,"y":-65,"trait":"line","cMask":["ball"],"bCoef":1},{"x":377,"y":-171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":-377,"y":-65,"trait":"line","cMask":["ball"],"bCoef":1},{"x":-377,"y":-171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":-377,"y":65,"trait":"line","cMask":["ball"],"bCoef":1},{"x":-377,"y":171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":377,"y":65,"trait":"line","cMask":["ball"],"bCoef":1},{"x":377,"y":171,"trait":"ballArea","cMask":["ball"],"bCoef":1},{"x":0,"y":199,"trait":"kickOffBarrier"},{"x":0,"y":65,"trait":"kickOffBarrier"},{"x":0,"y":-65,"trait":"kickOffBarrier"},{"x":0,"y":-199,"trait":"kickOffBarrier"},{"x":-368.53340356886,"y":-62.053454903872,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,-80]},{"x":-400.05760771891,"y":-62.053454903872,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,-80]},{"x":-400.05760771891,"y":64.043361696331,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,80]},{"x":-368.53340356886,"y":64.043361696331,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,80]},{"x":368.09926357786,"y":63.94882446641,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,-80]},{"x":400,"y":64,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,-80]},{"x":400,"y":-61.927767991658,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,80]},{"x":368.9681846993,"y":-62.144998272018,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,80]},{"x":-368,"y":-142.37229643041,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":-90},{"x":-260.90035258157,"y":-50.168480548544,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":0},{"x":-368,"y":-160.81305960678,"bCoef":0.1,"trait":"line","curve":-90},{"x":-358.5379338963,"y":-171,"bCoef":0.1,"trait":"line","curve":-90},{"x":-368,"y":141.33175243687,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":90},{"x":-260.90035258157,"y":49.127936555002,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":0},{"x":-368,"y":159.77251561324,"bCoef":0.1,"trait":"line","curve":90},{"x":-358.5379338963,"y":171,"bCoef":0.1,"trait":"line","curve":90},{"x":368,"y":159.77251561324,"bCoef":0.1,"trait":"line","curve":-90},{"x":358.36266315432,"y":171,"bCoef":0.1,"trait":"line","curve":-90},{"x":368,"y":-160.81305960678,"bCoef":0.1,"trait":"line","curve":90},{"x":358.36266315432,"y":-171,"bCoef":0.1,"trait":"line","curve":90},{"x":368,"y":-142.37229643041,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":90},{"x":260.72508183959,"y":-50.168480548544,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":90},{"x":368,"y":141.33175243687,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":-90},{"x":260.72508183959,"y":49.127936555002,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":-90},{"x":260.72508183959,"y":-50.168480548544,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":0},{"x":260.72508183959,"y":49.127936555002,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":0},{"x":-250.86909422732,"y":-1.2295321189394,"bCoef":0.1,"trait":"line","curve":180},{"x":-250.86909422732,"y":0.18898812539692,"bCoef":0.1,"trait":"line","curve":180},{"x":-250.86909422732,"y":-2.6480523632758,"bCoef":0.1,"trait":"line","curve":180},{"x":-250.86909422732,"y":1.6075083697333,"bCoef":0.1,"trait":"line","curve":180},{"x":-250.86909422732,"y":0.89824824756514,"bCoef":0.1,"trait":"line","curve":180},{"x":-250.86909422732,"y":-1.9387922411076,"bCoef":0.1,"trait":"line","curve":180},{"x":-250.86909422732,"y":1.9621384308174,"bCoef":0.1,"trait":"line","curve":180},{"x":-250.86909422732,"y":-3.0026824243599,"bCoef":0.1,"trait":"line","curve":180},{"x":250.69382348534,"y":-1.2295321189394,"bCoef":0.1,"trait":"line","curve":180},{"x":250.69382348534,"y":0.18898812539692,"bCoef":0.1,"trait":"line","curve":180},{"x":250.69382348534,"y":-2.6480523632758,"bCoef":0.1,"trait":"line","curve":180},{"x":250.69382348534,"y":1.6075083697333,"bCoef":0.1,"trait":"line","curve":180},{"x":250.69382348534,"y":0.89824824756514,"bCoef":0.1,"trait":"line","curve":180},{"x":250.69382348534,"y":-1.9387922411076,"bCoef":0.1,"trait":"line","curve":180},{"x":250.69382348534,"y":1.9621384308174,"bCoef":0.1,"trait":"line","curve":180},{"x":250.69382348534,"y":-3.0026824243599,"bCoef":0.1,"trait":"line","curve":180},{"x":-185.66591492467,"y":-1.2295321189394,"bCoef":0.1,"trait":"line","curve":180},{"x":-185.66591492467,"y":0.18898812539692,"bCoef":0.1,"trait":"line","curve":180},{"x":-185.66591492467,"y":-2.6480523632758,"bCoef":0.1,"trait":"line","curve":180},{"x":-185.66591492467,"y":1.6075083697333,"bCoef":0.1,"trait":"line","curve":180},{"x":-185.66591492467,"y":0.89824824756514,"bCoef":0.1,"trait":"line","curve":180},{"x":-185.66591492467,"y":-1.9387922411076,"bCoef":0.1,"trait":"line","curve":180},{"x":-185.66591492467,"y":1.9621384308174,"bCoef":0.1,"trait":"line","curve":180},{"x":-185.66591492467,"y":-3.0026824243599,"bCoef":0.1,"trait":"line","curve":180},{"x":185.49064418269,"y":-1.2295321189394,"bCoef":0.1,"trait":"line","curve":180},{"x":185.49064418269,"y":0.18898812539692,"bCoef":0.1,"trait":"line","curve":180},{"x":185.49064418269,"y":-2.6480523632758,"bCoef":0.1,"trait":"line","curve":180},{"x":185.49064418269,"y":1.6075083697333,"bCoef":0.1,"trait":"line","curve":180},{"x":185.49064418269,"y":0.89824824756514,"bCoef":0.1,"trait":"line","curve":180},{"x":185.49064418269,"y":-1.9387922411076,"bCoef":0.1,"trait":"line","curve":180},{"x":185.49064418269,"y":1.9621384308174,"bCoef":0.1,"trait":"line","curve":180},{"x":185.49064418269,"y":-3.0026824243599,"bCoef":0.1,"trait":"line","curve":180},{"x":-160.58776903904,"y":-159.39453936245,"bCoef":0.1,"trait":"line"},{"x":-160.58776903904,"y":-182.09086327183,"bCoef":0.1,"trait":"line"},{"x":-80.337702205015,"y":-159.39453936245,"bCoef":0.1,"trait":"line"},{"x":-80.337702205015,"y":-182.09086327183,"bCoef":0.1,"trait":"line"},{"x":160.41249829706,"y":-159.39453936245,"bCoef":0.1,"trait":"line"},{"x":160.41249829706,"y":-182.09086327183,"bCoef":0.1,"trait":"line"},{"x":80.162431463036,"y":-159.39453936245,"bCoef":0.1,"trait":"line"},{"x":80.162431463036,"y":-182.09086327183,"bCoef":0.1,"trait":"line"},{"x":-254.88159756902,"y":-171,"bCoef":0.1,"trait":"line"},{"x":-254.88159756902,"y":-182.09086327183,"bCoef":0.1,"trait":"line"},{"x":-371.91294503531,"y":-87.759267023458,"bCoef":0.1,"trait":"line"},{"x":-384.61920561736,"y":-87.759267023458,"bCoef":0.1,"trait":"line"},{"x":371.73767429333,"y":-87.759267023458,"bCoef":0.1,"trait":"line"},{"x":384.44393487538,"y":-87.759267023458,"bCoef":0.1,"trait":"line"},{"x":-371.91294503531,"y":86.718723029916,"bCoef":0.1,"trait":"line"},{"x":-384.61920561736,"y":86.718723029916,"bCoef":0.1,"trait":"line"},{"x":371.73767429333,"y":86.718723029916,"bCoef":0.1,"trait":"line"},{"x":384.44393487538,"y":86.718723029916,"bCoef":0.1,"trait":"line"},{"x":-254.88159756902,"y":171,"bCoef":0.1,"trait":"line"},{"x":-254.88159756902,"y":181.05031927829,"bCoef":0.1,"trait":"line"},{"x":254.70632682704,"y":-171,"bCoef":0.1,"trait":"line"},{"x":254.70632682704,"y":-182.09086327183,"bCoef":0.1,"trait":"line"},{"x":254.70632682704,"y":171,"bCoef":0.1,"trait":"line"},{"x":254.70632682704,"y":181.05031927829,"bCoef":0.1,"trait":"line"}],"segments":[{"v0":0,"v1":1,"trait":"ballArea"},{"v0":2,"v1":3,"trait":"ballArea"},{"v0":4,"v1":5,"trait":"ballArea"},{"v0":6,"v1":7,"trait":"ballArea"},{"v0":8,"v1":9,"trait":"kickOffBarrier","curve":180,"cGroup":["blueKO"]},{"v0":8,"v1":9,"trait":"kickOffBarrier","curve":-180,"cGroup":["redKO"]},{"vis":true,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":1,"v1":0,"cMask":["ball"],"x":-368},{"vis":true,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":5,"v1":4,"cMask":["ball"],"x":368},{"vis":true,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":2,"v1":3,"cMask":["ball"],"x":-368},{"vis":true,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":6,"v1":7,"cMask":["ball"],"x":368},{"vis":true,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":0,"v1":10,"y":171},{"vis":true,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":3,"v1":11,"y":-171},{"curve":0,"vis":true,"color":"FFFFFF","bCoef":0,"trait":"line","v0":12,"v1":13},{"curve":-180,"vis":true,"color":"FFFFFF","bCoef":0,"trait":"line","v0":9,"v1":8},{"curve":180,"vis":true,"color":"FFFFFF","bCoef":0,"trait":"line","v0":15,"v1":14},{"curve":0,"vis":true,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":2,"v1":1,"_selected":true},{"curve":0,"vis":true,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":6,"v1":5},{"vis":false,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":16,"v1":17,"cMask":["ball"],"x":330},{"vis":false,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":18,"v1":19,"cMask":["ball"],"x":-330},{"vis":false,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":20,"v1":21,"cMask":["ball"],"x":-330},{"vis":false,"color":"FFFFFF","bCoef":1,"trait":"ballArea","v0":22,"v1":23,"cMask":["ball"],"x":330},{"v0":24,"v1":25,"trait":"kickOffBarrier"},{"v0":26,"v1":27,"trait":"kickOffBarrier"},{"v0":28,"v1":29,"curve":0,"color":"F8F8F8","cMask":["red","blue","ball"],"trait":"goalNet","pos":[-700,-80],"y":-80},{"v0":29,"v1":30,"color":"F8F8F8","cMask":["red","blue","ball"],"trait":"goalNet","x":-590},{"v0":30,"v1":31,"curve":0,"color":"F8F8F8","cMask":["red","blue","ball"],"trait":"goalNet","pos":[-700,80],"y":80},{"v0":32,"v1":33,"curve":0,"color":"F8F8F8","cMask":["red","blue","ball"],"trait":"goalNet","pos":[-700,-80],"y":-80},{"v0":33,"v1":34,"color":"F8F8F8","cMask":["red","blue","ball"],"trait":"goalNet","x":-590},{"v0":34,"v1":35,"curve":0,"color":"F8F8F8","cMask":["red","blue","ball"],"trait":"goalNet","pos":[-700,80],"y":80},{"v0":36,"v1":37,"curve":94.0263701017,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":39,"v1":38,"curve":86.632306418889,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":40,"v1":41,"curve":-94.026370101699,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":37,"v1":41,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":43,"v1":42,"curve":-86.632306418888,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":45,"v1":44,"curve":86.632306418884,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":47,"v1":46,"curve":-86.632306418899,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":48,"v1":49,"curve":-94.026370101699,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":50,"v1":51,"curve":94.026370101699,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":52,"v1":53,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":390},{"v0":55,"v1":54,"curve":-180.00692920292,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":54,"v1":55,"curve":-180.00218240614,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":57,"v1":56,"curve":-179.64823645332,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":56,"v1":57,"curve":-180.35758668147,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":59,"v1":58,"curve":-180.02357323962,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":58,"v1":59,"curve":-180.00924102399,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":61,"v1":60,"curve":-180.06885755885,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":60,"v1":61,"curve":-180.02948353257,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":63,"v1":62,"curve":-179.99869069543,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":62,"v1":63,"curve":-179.99939258776,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":65,"v1":64,"curve":-180.08826047163,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":64,"v1":65,"curve":-179.91186753664,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":67,"v1":66,"curve":-179.99528711105,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":66,"v1":67,"curve":-179.99743836358,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":69,"v1":68,"curve":-179.98626041101,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":68,"v1":69,"curve":-179.99175181595,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":71,"v1":70,"curve":-180.04715562398,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":70,"v1":71,"curve":-179.95294709391,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":73,"v1":72,"curve":-179.95715750564,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":72,"v1":73,"curve":-179.89943871875,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":75,"v1":74,"curve":-179.94773754738,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":74,"v1":75,"curve":-179.98221351296,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":77,"v1":76,"curve":-180.4151727218,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":76,"v1":77,"curve":-179.58764458796,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":79,"v1":78,"curve":-180.00086646359,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":78,"v1":79,"curve":-180.01965986376,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":81,"v1":80,"curve":-180.03532601389,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":80,"v1":81,"curve":-179.99380079,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":83,"v1":82,"curve":-180.0044468452,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":82,"v1":83,"curve":-180.01386779847,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":85,"v1":84,"curve":-180.05158287563,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":84,"v1":85,"curve":-180.01212223878,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":86,"v1":87,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-240},{"v0":88,"v1":89,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-120},{"v0":90,"v1":91,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":240},{"v0":92,"v1":93,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":120},{"v0":94,"v1":95,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-381},{"v0":96,"v1":97,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-240,"y":123},{"v0":98,"v1":99,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-240,"y":123},{"v0":100,"v1":101,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-240,"y":-123},{"v0":102,"v1":103,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-240,"y":-123},{"v0":104,"v1":105,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-381},{"v0":106,"v1":107,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":381},{"v0":108,"v1":109,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":381}],"goals":[{"p0":[-374.25,-62.053454903872],"p1":[-374.25,64.043361696331],"team":"red"},{"p0":[374.25,62],"p1":[374.25,-62],"team":"blue"}],"discs":[{"radius":3.9405255187564,"pos":[-368.53340356886,64.043361696331],"color":"6666CC","trait":"goalPost","y":80},{"radius":3.9405255187564,"pos":[-368.53340356886,-62.053454903872],"color":"6666CC","trait":"goalPost","y":-80,"x":-560},{"radius":3.9405255187564,"pos":[368.9681846993,-62.144998272018],"color":"6666CC","trait":"goalPost","y":80},{"radius":3.9405255187564,"pos":[368.09926357786,63.94882446641],"color":"6666CC","trait":"goalPost","y":-80,"x":-560},{"radius":3,"invMass":0,"pos":[-368,-171],"color":"FFCC00","bCoef":0.1,"trait":"line"},{"radius":3,"invMass":0,"pos":[-368,171],"color":"FFCC00","bCoef":0.1,"trait":"line"},{"radius":3,"invMass":0,"pos":[368,171],"color":"FFCC00","bCoef":0.1,"trait":"line"},{"radius":3,"invMass":0,"pos":[368,-171],"color":"FFCC00","bCoef":0.1,"trait":"line"}],"planes":[{"normal":[0,1],"dist":-171,"trait":"ballArea"},{"normal":[0,-1],"dist":-171,"trait":"ballArea"},{"normal":[0,1],"dist":-200,"bCoef":0.2,"cMask":["all"]},{"normal":[0,-1],"dist":-200,"bCoef":0.2,"cMask":["all"]},{"normal":[1,0],"dist":-420,"bCoef":0.2,"cMask":["all"]},{"normal":[-1,0],"dist":-420,"bCoef":0.2,"cMask":["all"]}],"traits":{"ballArea":{"vis":false,"bCoef":1,"cMask":["ball"]},"goalPost":{"radius":8,"invMass":0,"bCoef":1},"goalNet":{"vis":true,"bCoef":0.1,"cMask":["all"]},"kickOffBarrier":{"vis":false,"bCoef":0.1,"cGroup":["redKO","blueKO"],"cMask":["red","blue"]},"line":{"vis":true,"bCoef":0,"cMask":[""]},"arco":{"radius":2,"cMask":["n\/d"],"color":"cccccc"}},"playerPhysics":{"acceleration":0.11,"kickingAcceleration":0.083,"kickStrength":5,"bCoef":0},"ballPhysics":{"radius":6.25,"color":"FFCC00","bCoef":0.4,"invMass":1.5,"damping":0.99}}';
const classicMap = `{

	"name" : "『 𝖥𝗎𝗍𝗌𝖺𝗅 𝟣 𝗏𝗌 𝟣  𝟤 𝗏𝗌 𝟤  -  𝙇𝙋𝙁 𝙈𝙖𝙥 』",

	"width" : 497,

	"height" : 220,

	"spawnDistance" : 350,

	"bg" : { "kickOffRadius" : NaN, "height" : NaN, "width" : NaN, "type" : "hockey" },

	"vertexes" : [
		/* 0 */ { "x" : -400, "y" : -70, "cMask" : [ ] },
		/* 1 */ { "x" : -400, "y" : 70, "cMask" : [ ] },
		/* 2 */ { "x" : -410, "y" : -70, "cMask" : [ ] },
		/* 3 */ { "x" : -430, "y" : 60, "cMask" : [ ] },
		/* 4 */ { "x" : -430, "y" : -60, "cMask" : [ ] },
		/* 5 */ { "x" : -410, "y" : 70, "cMask" : [ ] },
		/* 6 */ { "x" : 400, "y" : -70, "cMask" : [ ] },
		/* 7 */ { "x" : 400, "y" : 70, "cMask" : [ ] },
		/* 8 */ { "x" : 410, "y" : -70, "cMask" : [ ] },
		/* 9 */ { "x" : 430, "y" : 60, "cMask" : [ ] },
		/* 10 */ { "x" : 430, "y" : -60, "cMask" : [ ] },
		/* 11 */ { "x" : 410, "y" : 70, "cMask" : [ ] },
		/* 12 */ { "x" : -400, "y" : -130, "cMask" : [ ], "color" : "B6B6B8" },
		/* 13 */ { "x" : -400, "y" : 130, "cMask" : [ ], "color" : "B6B6B8" },
		/* 14 */ { "x" : 400, "y" : 130, "cMask" : [ ], "color" : "B6B6B8" },
		/* 15 */ { "x" : 400, "y" : -130, "cMask" : [ ], "color" : "B6B6B8" },
		/* 16 */ { "x" : 0, "y" : -190, "cMask" : [ ], "color" : "B6B6B8" },
		/* 17 */ { "x" : 0, "y" : -80, "cMask" : [ ], "color" : "B6B6B8" },
		/* 18 */ { "x" : 0, "y" : -220, "cMask" : [ ] },
		/* 19 */ { "x" : 0, "y" : 80, "cMask" : [ ], "color" : "B6B6B8" },
		/* 20 */ { "x" : -400, "y" : -190, "cMask" : [ ] },
		/* 21 */ { "x" : 400, "y" : -190, "cMask" : [ ] },
		/* 22 */ { "x" : -400, "y" : 190, "cMask" : [ ] },
		/* 23 */ { "x" : 0, "y" : 190, "cMask" : [ ], "color" : "B6B6B8" },
		/* 24 */ { "x" : 0, "y" : 220, "cMask" : [ ] },
		/* 25 */ { "x" : 400, "y" : 190, "cMask" : [ ] },
		/* 26 */ { "x" : -300, "y" : -200, "cMask" : [ ] },
		/* 27 */ { "x" : -300, "y" : -180, "cMask" : [ ] },
		/* 28 */ { "x" : -200, "y" : -200, "cMask" : [ ] },
		/* 29 */ { "x" : -200, "y" : -180, "cMask" : [ ] },
		/* 30 */ { "x" : 200, "y" : -200, "cMask" : [ ] },
		/* 31 */ { "x" : 200, "y" : -180, "cMask" : [ ] },
		/* 32 */ { "x" : 300, "y" : -200, "cMask" : [ ] },
		/* 33 */ { "x" : 300, "y" : -180, "cMask" : [ ] },
		/* 34 */ { "x" : -300, "y" : 180, "cMask" : [ ] },
		/* 35 */ { "x" : -300, "y" : 200, "cMask" : [ ] },
		/* 36 */ { "x" : -200, "y" : 180, "cMask" : [ ] },
		/* 37 */ { "x" : -200, "y" : 200, "cMask" : [ ] },
		/* 38 */ { "x" : 200, "y" : 180, "cMask" : [ ] },
		/* 39 */ { "x" : 200, "y" : 200, "cMask" : [ ] },
		/* 40 */ { "x" : 300, "y" : 180, "cMask" : [ ] },
		/* 41 */ { "x" : 300, "y" : 200, "cMask" : [ ] },
		/* 42 */ { "x" : -100, "y" : 200, "cMask" : [ ] },
		/* 43 */ { "x" : -100, "y" : 180, "cMask" : [ ] },
		/* 44 */ { "x" : -100, "y" : -200, "cMask" : [ ] },
		/* 45 */ { "x" : -100, "y" : -180, "cMask" : [ ] },
		/* 46 */ { "x" : 100, "y" : 200, "cMask" : [ ] },
		/* 47 */ { "x" : 100, "y" : 180, "cMask" : [ ] },
		/* 48 */ { "x" : 100, "y" : -200, "cMask" : [ ] },
		/* 49 */ { "x" : 100, "y" : -180, "cMask" : [ ] },
		/* 50 */ { "x" : -565, "y" : -160, "cMask" : [ ], "color" : "555555" },
		/* 51 */ { "x" : -535, "y" : -160, "cMask" : [ ], "color" : "555555" },
		/* 52 */ { "x" : -565, "y" : 160, "cMask" : [ ], "color" : "555555" },
		/* 53 */ { "x" : -535, "y" : 160, "cMask" : [ ], "color" : "555555" },
		/* 54 */ { "x" : 536, "y" : -160, "cMask" : [ ], "color" : "555555" },
		/* 55 */ { "x" : 565, "y" : -160, "cMask" : [ ], "color" : "555555" },
		/* 56 */ { "x" : 536, "y" : 160, "cMask" : [ ], "color" : "555555" },
		/* 57 */ { "x" : 565, "y" : 160, "cMask" : [ ], "color" : "555555" },
		/* 58 */ { "x" : -62.22306302239708, "y" : 30.864701620093868, "cMask" : [ ], "color" : "B6B6B8" },
		/* 59 */ { "x" : -62.22306302239708, "y" : 25.074830460448013, "cMask" : [ ], "color" : "B6B6B8" },
		/* 60 */ { "x" : -50.64332070310534, "y" : 19.284959300802143, "cMask" : [ ], "color" : "B6B6B8" },
		/* 61 */ { "x" : -27.483836064521878, "y" : 19.284959300802143, "cMask" : [ ], "color" : "B6B6B8" },
		/* 62 */ { "x" : -27.483836064521878, "y" : 30.864701620093868, "cMask" : [ ], "color" : "B6B6B8" },
		/* 63 */ { "x" : -62.22306302239708, "y" : 10.60015256133334, "cMask" : [ ], "curve" : 35, "color" : "B6B6B8" },
		/* 64 */ { "x" : -62.22306302239708, "y" : -32.82388113601066, "cMask" : [ ], "color" : "B6B6B8" },
		/* 65 */ { "x" : -50.64332070310534, "y" : -32.82388113601066, "cMask" : [ ], "color" : "B6B6B8" },
		/* 66 */ { "x" : -50.64332070310534, "y" : -2.7165511058521488, "cMask" : [ ], "curve" : 40, "color" : "B6B6B8" },
		/* 67 */ { "x" : -18.799029325053084, "y" : 30.864701620093868, "cMask" : [ ], "color" : "B6B6B8" },
		/* 68 */ { "x" : -18.799029325053084, "y" : 7.126229865545825, "cMask" : [ ], "color" : "B6B6B8" },
		/* 69 */ { "x" : -7.21928700576135, "y" : 3.6523071697583047, "cMask" : [ ], "color" : "B6B6B8" },
		/* 70 */ { "x" : -7.21928700576135, "y" : 30.864701620093868, "cMask" : [ ], "color" : "B6B6B8" },
		/* 71 */ { "x" : 0.8865326177428625, "y" : 1.9153458218645445, "cMask" : [ ], "color" : "B6B6B8" },
		/* 72 */ { "x" : 3.202481081601208, "y" : 1.9153458218645445, "cMask" : [ ], "color" : "B6B6B8" },
		/* 73 */ { "x" : -18.799029325053084, "y" : -2.7165511058521488, "cMask" : [ ], "color" : "B6B6B8" },
		/* 74 */ { "x" : -18.799029325053084, "y" : -32.82388113601066, "cMask" : [ ], "color" : "B6B6B8" },
		/* 75 */ { "x" : 3.202481081601208, "y" : -32.82388113601066, "cMask" : [ ], "color" : "B6B6B8" },
		/* 76 */ { "x" : 15.940197632822112, "y" : -18.349203236895985, "cMask" : [ ], "color" : "B6B6B8" },
		/* 77 */ { "x" : 15.940197632822112, "y" : -6.769460917604253, "cMask" : [ ], "color" : "B6B6B8" },
		/* 78 */ { "x" : 1.4655197337074481, "y" : -9.66439649742719, "cMask" : [ ], "color" : "B6B6B8" },
		/* 79 */ { "x" : -7.21928700576135, "y" : -5.032499569710496, "cMask" : [ ], "color" : "B6B6B8" },
		/* 80 */ { "x" : -7.21928700576135, "y" : -21.244138816718923, "cMask" : [ ], "color" : "B6B6B8" },
		/* 81 */ { "x" : 1.4655197337074481, "y" : -21.244138816718923, "cMask" : [ ], "color" : "B6B6B8" },
		/* 82 */ { "x" : 24.62500437229091, "y" : 30.864701620093868, "cMask" : [ ], "color" : "B6B6B8" },
		/* 83 */ { "x" : 24.62500437229091, "y" : -1.5585768739229764, "cMask" : [ ], "color" : "B6B6B8" },
		/* 84 */ { "x" : 36.20474669158264, "y" : -2.7165511058521488, "cMask" : [ ], "color" : "B6B6B8" },
		/* 85 */ { "x" : 53.57436017052026, "y" : -2.7165511058521488, "cMask" : [ ], "color" : "B6B6B8" },
		/* 86 */ { "x" : 53.57436017052026, "y" : 1.9153458218645445, "cMask" : [ ], "color" : "B6B6B8" },
		/* 87 */ { "x" : 36.20474669158264, "y" : 1.9153458218645445, "cMask" : [ ], "color" : "B6B6B8" },
		/* 88 */ { "x" : 36.20474669158264, "y" : 30.864701620093868, "cMask" : [ ], "color" : "B6B6B8" },
		/* 89 */ { "x" : 24.62500437229091, "y" : -6.769460917604253, "cMask" : [ ], "color" : "B6B6B8" },
		/* 90 */ { "x" : 24.62500437229091, "y" : -32.82388113601066, "cMask" : [ ], "color" : "B6B6B8" },
		/* 91 */ { "x" : 59.36423133016611, "y" : -32.82388113601066, "cMask" : [ ], "color" : "B6B6B8" },
		/* 92 */ { "x" : 59.36423133016611, "y" : -21.244138816718923, "cMask" : [ ], "color" : "B6B6B8" },
		/* 93 */ { "x" : 36.20474669158264, "y" : -21.244138816718923, "cMask" : [ ], "color" : "B6B6B8" },
		/* 94 */ { "x" : 36.20474669158264, "y" : -9.66439649742719, "cMask" : [ ], "color" : "B6B6B8" },
		/* 95 */ { "x" : 53.57436017052026, "y" : -9.66439649742719, "cMask" : [ ], "color" : "B6B6B8" },
		/* 96 */ { "x" : 65.15410248981198, "y" : -2.1375639898875622, "cMask" : [ ], "color" : "B6B6B8" },
		/* 97 */ { "x" : -61.06508879046789, "y" : -32.24489402004607, "cMask" : [ ], "color" : "B6B6B8" },
		/* 98 */ { "x" : -61.06508879046789, "y" : 10.021165445368759, "cMask" : [ ], "color" : "B6B6B8" },
		/* 99 */ { "x" : -59.90711455853874, "y" : -32.24489402004607, "cMask" : [ ], "color" : "B6B6B8" },
		/* 100 */ { "x" : -59.90711455853874, "y" : 8.863191213439581, "cMask" : [ ], "color" : "B6B6B8" },
		/* 101 */ { "x" : -58.749140326609556, "y" : -32.24489402004607, "cMask" : [ ], "color" : "B6B6B8" },
		/* 102 */ { "x" : -58.749140326609556, "y" : 8.284204097474996, "cMask" : [ ], "color" : "B6B6B8" },
		/* 103 */ { "x" : -57.59116609468036, "y" : -32.24489402004607, "cMask" : [ ], "color" : "B6B6B8" },
		/* 104 */ { "x" : -57.59116609468036, "y" : 8.284204097474996, "cMask" : [ ], "color" : "B6B6B8" },
		/* 105 */ { "x" : -56.433191862751194, "y" : -32.24489402004607, "cMask" : [ ], "color" : "B6B6B8" },
		/* 106 */ { "x" : -56.433191862751194, "y" : 7.705216981510413, "cMask" : [ ], "color" : "B6B6B8" },
		/* 107 */ { "x" : -55.275217630822034, "y" : -32.24489402004607, "cMask" : [ ], "color" : "B6B6B8" },
		/* 108 */ { "x" : -55.275217630822034, "y" : 7.126229865545825, "cMask" : [ ], "color" : "B6B6B8" },
		/* 109 */ { "x" : -54.117243398892874, "y" : -32.24489402004607, "cMask" : [ ], "color" : "B6B6B8" },
		/* 110 */ { "x" : -54.117243398892874, "y" : 6.547242749581235, "cMask" : [ ], "color" : "B6B6B8" },
		/* 111 */ { "x" : -52.95926916696371, "y" : -32.24489402004607, "cMask" : [ ], "color" : "B6B6B8" },
		/* 112 */ { "x" : -52.95926916696371, "y" : 6.547242749581235, "cMask" : [ ], "color" : "B6B6B8" },
		/* 113 */ { "x" : -51.80129493503451, "y" : -32.24489402004607, "cMask" : [ ], "color" : "B6B6B8" },
		/* 114 */ { "x" : -51.80129493503451, "y" : 5.968255633616649, "cMask" : [ ], "color" : "B6B6B8" },
		/* 115 */ { "x" : -17.641055093123914, "y" : -32.24489402004607, "cMask" : [ ], "color" : "B6B6B8" },
		/* 116 */ { "x" : -17.641055093123914, "y" : -2.7165511058521488, "cMask" : [ ], "color" : "B6B6B8" },
		/* 117 */ { "x" : -16.483080861194736, "y" : -32.24489402004607, "cMask" : [ ], "color" : "B6B6B8" },
		/* 118 */ { "x" : -16.483080861194736, "y" : -3.2955382218167344, "cMask" : [ ], "color" : "B6B6B8" },
		/* 119 */ { "x" : -15.325106629265564, "y" : -32.24489402004607, "cMask" : [ ], "color" : "B6B6B8" },
		/* 120 */ { "x" : -15.325106629265564, "y" : -3.2955382218167344, "cMask" : [ ], "color" : "B6B6B8" },
		/* 121 */ { "x" : -14.167132397336388, "y" : -32.24489402004607, "cMask" : [ ], "color" : "B6B6B8" },
		/* 122 */ { "x" : -14.167132397336388, "y" : -4.164018895763616, "cMask" : [ ], "color" : "B6B6B8" },
		/* 123 */ { "x" : -13.588145281371805, "y" : -32.24489402004607, "cMask" : [ ], "color" : "B6B6B8" },
		/* 124 */ { "x" : -13.588145281371805, "y" : -4.164018895763616, "cMask" : [ ], "color" : "B6B6B8" },
		/* 125 */ { "x" : -12.430171049442627, "y" : -32.24489402004607, "cMask" : [ ], "color" : "B6B6B8" },
		/* 126 */ { "x" : -12.430171049442627, "y" : -4.453512453745909, "cMask" : [ ], "color" : "B6B6B8" },
		/* 127 */ { "x" : -11.272196817513457, "y" : -32.24489402004607, "cMask" : [ ], "color" : "B6B6B8" },
		/* 128 */ { "x" : -11.272196817513457, "y" : -4.453512453745909, "cMask" : [ ], "color" : "B6B6B8" },
		/* 129 */ { "x" : -10.114222585584283, "y" : -32.24489402004607, "cMask" : [ ], "color" : "B6B6B8" },
		/* 130 */ { "x" : -10.114222585584283, "y" : -4.743006011728203, "cMask" : [ ], "color" : "B6B6B8" },
		/* 131 */ { "x" : -8.95624835365511, "y" : -32.24489402004607, "cMask" : [ ], "color" : "B6B6B8" },
		/* 132 */ { "x" : -8.95624835365511, "y" : -4.743006011728203, "cMask" : [ ], "color" : "B6B6B8" },
		/* 133 */ { "x" : -7.798274121725937, "y" : -32.24489402004607, "cMask" : [ ], "color" : "B6B6B8" },
		/* 134 */ { "x" : -7.798274121725937, "y" : -5.032499569710496, "cMask" : [ ], "color" : "B6B6B8" },
		/* 135 */ { "x" : 25.203991488255493, "y" : -31.665906904081485, "cMask" : [ ], "color" : "B6B6B8" },
		/* 136 */ { "x" : 58.785244214201526, "y" : -31.665906904081485, "cMask" : [ ], "color" : "B6B6B8" },
		/* 137 */ { "x" : 25.203991488255493, "y" : -30.507932672152293, "cMask" : [ ], "color" : "B6B6B8" },
		/* 138 */ { "x" : 58.785244214201526, "y" : -30.507932672152293, "cMask" : [ ], "color" : "B6B6B8" },
		/* 139 */ { "x" : 25.203991488255493, "y" : -29.349958440223133, "cMask" : [ ], "color" : "B6B6B8" },
		/* 140 */ { "x" : 58.785244214201526, "y" : -29.349958440223133, "cMask" : [ ], "color" : "B6B6B8" },
		/* 141 */ { "x" : 25.203991488255493, "y" : -28.19198420829397, "cMask" : [ ], "color" : "B6B6B8" },
		/* 142 */ { "x" : 58.785244214201526, "y" : -28.19198420829397, "cMask" : [ ], "color" : "B6B6B8" },
		/* 143 */ { "x" : 25.203991488255493, "y" : -27.034009976364782, "cMask" : [ ], "color" : "B6B6B8" },
		/* 144 */ { "x" : 58.785244214201526, "y" : -27.034009976364782, "cMask" : [ ], "color" : "B6B6B8" },
		/* 145 */ { "x" : 25.203991488255493, "y" : -25.876035744435615, "cMask" : [ ], "color" : "B6B6B8" },
		/* 146 */ { "x" : 58.785244214201526, "y" : -25.876035744435615, "cMask" : [ ], "color" : "B6B6B8" },
		/* 147 */ { "x" : 25.203991488255493, "y" : -24.718061512506438, "cMask" : [ ], "color" : "B6B6B8" },
		/* 148 */ { "x" : 58.785244214201526, "y" : -24.718061512506438, "cMask" : [ ], "color" : "B6B6B8" },
		/* 149 */ { "x" : 25.203991488255493, "y" : -23.560087280577267, "cMask" : [ ], "color" : "B6B6B8" },
		/* 150 */ { "x" : 58.785244214201526, "y" : -23.560087280577267, "cMask" : [ ], "color" : "B6B6B8" },
		/* 151 */ { "x" : 25.203991488255493, "y" : -22.402113048648093, "cMask" : [ ], "color" : "B6B6B8" },
		/* 152 */ { "x" : 58.785244214201526, "y" : -22.402113048648093, "cMask" : [ ], "color" : "B6B6B8" },
		/* 153 */ { "x" : 25.782978604220087, "y" : -24.139074396541854, "cMask" : [ ], "color" : "B6B6B8" },
		/* 154 */ { "x" : 25.782978604220087, "y" : -7.927435149533431, "cMask" : [ ], "color" : "B6B6B8" },
		/* 155 */ { "x" : 26.940952836149258, "y" : -24.139074396541854, "cMask" : [ ], "color" : "B6B6B8" },
		/* 156 */ { "x" : 26.940952836149258, "y" : -7.927435149533431, "cMask" : [ ], "color" : "B6B6B8" },
		/* 157 */ { "x" : 28.09892706807843, "y" : -24.139074396541854, "cMask" : [ ], "color" : "B6B6B8" },
		/* 158 */ { "x" : 28.09892706807843, "y" : -7.927435149533431, "cMask" : [ ], "color" : "B6B6B8" },
		/* 159 */ { "x" : 29.256901300007605, "y" : -24.139074396541854, "cMask" : [ ], "color" : "B6B6B8" },
		/* 160 */ { "x" : 29.256901300007605, "y" : -7.927435149533431, "cMask" : [ ], "color" : "B6B6B8" },
		/* 161 */ { "x" : 30.41487553193678, "y" : -24.139074396541854, "cMask" : [ ], "color" : "B6B6B8" },
		/* 162 */ { "x" : 30.41487553193678, "y" : -7.927435149533431, "cMask" : [ ], "color" : "B6B6B8" },
		/* 163 */ { "x" : 31.57284976386596, "y" : -24.139074396541854, "cMask" : [ ], "color" : "B6B6B8" },
		/* 164 */ { "x" : 31.57284976386596, "y" : -7.927435149533431, "cMask" : [ ], "color" : "B6B6B8" },
		/* 165 */ { "x" : 32.73082399579512, "y" : -24.139074396541854, "cMask" : [ ], "color" : "B6B6B8" },
		/* 166 */ { "x" : 32.73082399579512, "y" : -7.927435149533431, "cMask" : [ ], "color" : "B6B6B8" },
		/* 167 */ { "x" : 33.888798227724294, "y" : -24.139074396541854, "cMask" : [ ], "color" : "B6B6B8" },
		/* 168 */ { "x" : 33.888798227724294, "y" : -7.927435149533431, "cMask" : [ ], "color" : "B6B6B8" },
		/* 169 */ { "x" : 35.04677245965347, "y" : -24.139074396541854, "cMask" : [ ], "color" : "B6B6B8" },
		/* 170 */ { "x" : 35.04677245965347, "y" : -7.927435149533431, "cMask" : [ ], "color" : "B6B6B8" },
		/* 171 */ { "x" : -51.80129493503451, "y" : -2.7165511058521488, "cMask" : [ ], "curve" : 30.5, "color" : "B6B6B8" },
		/* 172 */ { "x" : 53.41996596216764, "y" : -4.685103766274835, "cMask" : [ ], "curve" : 30.5, "color" : "B6B6B8" },
		/* 173 */ { "x" : -51.37670202742255, "y" : -0.9795897579583893, "cMask" : [ ], "color" : "B6B6B8" },
		/* 174 */ { "x" : 42.998197874805065, "y" : -7.001052230133178, "cMask" : [ ], "color" : "B6B6B8" },
		/* 175 */ { "x" : -55.42961183917465, "y" : 1.6837545093356192, "cMask" : [ ], "color" : "B6B6B8" },
		/* 176 */ { "x" : 34.89237825130085, "y" : -8.159026462062357, "cMask" : [ ], "color" : "B6B6B8" },
		/* 177 */ { "x" : -52.53467625935173, "y" : 1.6837545093356192, "cMask" : [ ], "color" : "B6B6B8" },
		/* 178 */ { "x" : 43.57718499076965, "y" : -7.580039346097767, "cMask" : [ ], "color" : "B6B6B8" },
		/* 179 */ { "x" : -51.371189210644566, "y" : 2.080774498415399, "cMask" : [ ], "color" : "B6B6B8" },
		/* 180 */ { "x" : 40.10877511176012, "y" : -7.1830193570179866, "cMask" : [ ], "color" : "B6B6B8" },
		/* 181 */ { "x" : -54.2661247904675, "y" : 3.817735846309159, "cMask" : [ ], "color" : "B6B6B8" },
		/* 182 */ { "x" : 50.53054319912269, "y" : -6.604032241053399, "cMask" : [ ], "color" : "B6B6B8" },
		/* 183 */ { "x" : -51.371189210644566, "y" : 4.396722962273746, "cMask" : [ ], "color" : "B6B6B8" },
		/* 184 */ { "x" : 36.6348524159726, "y" : -6.025045125088813, "cMask" : [ ], "color" : "B6B6B8" },
		/* 185 */ { "x" : -53.10815055853832, "y" : 6.712671426132091, "cMask" : [ ], "color" : "B6B6B8" },
		/* 186 */ { "x" : 12.896380661424546, "y" : -7.1830193570179866, "cMask" : [ ], "color" : "B6B6B8" },
		/* 187 */ { "x" : -52.08251926784984, "y" : 2.841728741264791, "cMask" : [ ], "color" : "B6B6B8" },
		/* 188 */ { "x" : -31.817970209089307, "y" : -4.685103766274835, "cMask" : [ ], "color" : "B6B6B8" },
		/* 189 */ { "x" : -52.661506383814434, "y" : 3.4207158572293785, "cMask" : [ ], "color" : "B6B6B8" },
		/* 190 */ { "x" : 11.027076372290106, "y" : -8.159026462062357, "cMask" : [ ], "color" : "B6B6B8" },
		/* 191 */ { "x" : -50.924545035920666, "y" : -1.2111810704873152, "cMask" : [ ], "color" : "B6B6B8" },
		/* 192 */ { "x" : -31.817970209089307, "y" : -5.8430779982040075, "cMask" : [ ], "color" : "B6B6B8" },
		/* 193 */ { "x" : -50.924545035920666, "y" : 3.999702973193966, "cMask" : [ ], "color" : "B6B6B8" },
		/* 194 */ { "x" : -13.290382498222536, "y" : -7.001052230133178, "cMask" : [ ], "color" : "B6B6B8" },
		/* 195 */ { "x" : -54.216509439465646, "y" : 0.5257802774064455, "cMask" : [ ], "color" : "B6B6B8" },
		/* 196 */ { "x" : -38.58385730842181, "y" : -0.053206838558141414, "cMask" : [ ], "color" : "B6B6B8" },
		/* 197 */ { "x" : -50.82527899534788, "y" : -1.442781217658513, "cMask" : [ ], "color" : "B6B6B8" },
		/* 198 */ { "x" : -40.403510907985314, "y" : -0.8637941016939263, "cMask" : [ ], "color" : "B6B6B8" },
		/* 199 */ { "x" : -8.95624835365511, "y" : -5.8430779982040075, "cMask" : [ ], "color" : "B6B6B8" },
		/* 200 */ { "x" : 17.09817186475129, "y" : -7.001052230133178, "cMask" : [ ], "color" : "B6B6B8" },
		/* 201 */ { "x" : -8.377261237690526, "y" : -32.24489402004607, "cMask" : [ ], "color" : "B6B6B8" },
		/* 202 */ { "x" : 5.518429545459554, "y" : -32.24489402004607, "cMask" : [ ], "color" : "B6B6B8" },
		/* 203 */ { "x" : -8.377261237690526, "y" : -31.086919788116898, "cMask" : [ ], "color" : "B6B6B8" },
		/* 204 */ { "x" : 8.41336512528249, "y" : -31.086919788116898, "cMask" : [ ], "color" : "B6B6B8" },
		/* 205 */ { "x" : -8.377261237690526, "y" : -29.928945556187724, "cMask" : [ ], "color" : "B6B6B8" },
		/* 206 */ { "x" : 10.729313589140837, "y" : -29.928945556187724, "cMask" : [ ], "color" : "B6B6B8" },
		/* 207 */ { "x" : -8.377261237690526, "y" : -28.77097132425855, "cMask" : [ ], "color" : "B6B6B8" },
		/* 208 */ { "x" : 11.887287821070005, "y" : -28.77097132425855, "cMask" : [ ], "color" : "B6B6B8" },
		/* 209 */ { "x" : -8.377261237690526, "y" : -27.612997092329376, "cMask" : [ ], "color" : "B6B6B8" },
		/* 210 */ { "x" : 12.466274937034594, "y" : -27.612997092329376, "cMask" : [ ], "color" : "B6B6B8" },
		/* 211 */ { "x" : -8.377261237690526, "y" : -26.455022860400206, "cMask" : [ ], "color" : "B6B6B8" },
		/* 212 */ { "x" : 13.045262052999181, "y" : -26.455022860400206, "cMask" : [ ], "color" : "B6B6B8" },
		/* 213 */ { "x" : -8.377261237690526, "y" : -25.297048628471025, "cMask" : [ ], "color" : "B6B6B8" },
		/* 214 */ { "x" : 13.624249168963768, "y" : -25.297048628471025, "cMask" : [ ], "color" : "B6B6B8" },
		/* 215 */ { "x" : -8.377261237690526, "y" : -24.139074396541854, "cMask" : [ ], "color" : "B6B6B8" },
		/* 216 */ { "x" : 14.203236284928355, "y" : -24.139074396541854, "cMask" : [ ], "color" : "B6B6B8" },
		/* 217 */ { "x" : -8.377261237690526, "y" : -22.98110016461268, "cMask" : [ ], "color" : "B6B6B8" },
		/* 218 */ { "x" : 14.782223400892942, "y" : -22.98110016461268, "cMask" : [ ], "color" : "B6B6B8" },
		/* 219 */ { "x" : -8.377261237690526, "y" : -21.823125932683514, "cMask" : [ ], "color" : "B6B6B8" },
		/* 220 */ { "x" : 15.361210516857529, "y" : -21.823125932683514, "cMask" : [ ], "color" : "B6B6B8" }

	],

	"segments" : [
		{ "v0" : 0, "v1" : 1, "cMask" : [ ], "color" : "FFCCCC" },
		{ "v0" : 0, "v1" : 2, "bias" : 3, "bCoef" : 0.1, "cMask" : ["ball" ], "color" : "DA4D4B" },
		{ "v0" : 4, "v1" : 3, "bias" : 3, "bCoef" : 0.1, "cMask" : ["ball" ], "color" : "FFFFFF" },
		{ "v0" : 5, "v1" : 1, "bias" : 3, "bCoef" : 0.1, "cMask" : ["ball" ], "color" : "DA4D4B" },
		{ "v0" : 4, "v1" : 2, "bias" : -3, "bCoef" : 0.1, "curve" : 89.99999999999999, "curveF" : 1.0000000000000002, "cMask" : ["ball" ], "color" : "F5072F" },
		{ "v0" : 5, "v1" : 3, "bias" : -3, "bCoef" : 0.1, "curve" : 89.99999999999999, "curveF" : 1.0000000000000002, "cMask" : ["ball" ], "color" : "F5072F" },
		{ "v0" : 7, "v1" : 6, "cMask" : [ ], "color" : "CCCCFF" },
		{ "v0" : 8, "v1" : 6, "bias" : 3, "bCoef" : 0.1, "cMask" : ["ball" ], "color" : "3377AE" },
		{ "v0" : 9, "v1" : 10, "bias" : 3, "bCoef" : 0.1, "cMask" : ["ball" ], "color" : "FFFFFF" },
		{ "v0" : 7, "v1" : 11, "bias" : 3, "bCoef" : 0.1, "cMask" : ["ball" ], "color" : "3377AE" },
		{ "v0" : 8, "v1" : 10, "bias" : -3, "bCoef" : 0.1, "curve" : 89.99999999999999, "curveF" : 1.0000000000000002, "cMask" : ["ball" ], "color" : "F5072F" },
		{ "v0" : 9, "v1" : 11, "bias" : -3, "bCoef" : 0.1, "curve" : 89.99999999999999, "curveF" : 1.0000000000000002, "cMask" : ["ball" ], "color" : "F5072F" },
		{ "v0" : 12, "v1" : 13, "curve" : 180, "curveF" : 6.123233995736766e-17, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 14, "v1" : 15, "curve" : 180, "curveF" : 6.123233995736766e-17, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 16, "v1" : 17, "bCoef" : 0.1, "cMask" : ["red","blue" ], "cGroup" : ["redKO","blueKO" ], "color" : "B6B6B8" },
		{ "v0" : 16, "v1" : 18, "bCoef" : 0.1, "vis" : false, "cMask" : ["red","blue" ], "cGroup" : ["redKO","blueKO" ], "color" : "737573" },
		{ "v0" : 19, "v1" : 17, "bCoef" : 0.1, "curve" : 180, "curveF" : 6.123233995736766e-17, "cMask" : ["red","blue" ], "cGroup" : ["blueKO" ], "color" : "B6B6B8" },
		{ "v0" : 21, "v1" : 20, "bias" : 99, "cMask" : ["ball" ], "color" : "FFFFFF" },
		{ "v0" : 20, "v1" : 0, "bias" : 99, "cMask" : ["ball" ], "color" : "FFFFFF" },
		{ "v0" : 1, "v1" : 22, "bias" : 99, "cMask" : ["ball" ], "color" : "FFFFFF" },
		{ "v0" : 23, "v1" : 19, "bCoef" : 0.1, "cMask" : ["red","blue" ], "cGroup" : ["redKO","blueKO" ], "color" : "B6B6B8" },
		{ "v0" : 23, "v1" : 24, "bCoef" : 0.1, "vis" : false, "cMask" : ["red","blue" ], "cGroup" : ["redKO","blueKO" ], "color" : "737573" },
		{ "v0" : 17, "v1" : 19, "bCoef" : 0.1, "curve" : 180, "curveF" : 6.123233995736766e-17, "cMask" : ["red","blue" ], "cGroup" : ["redKO" ], "color" : "B6B6B8" },
		{ "v0" : 22, "v1" : 25, "bias" : 99, "cMask" : ["ball" ], "color" : "FFFFFF" },
		{ "v0" : 6, "v1" : 21, "bias" : 99, "cMask" : ["ball" ], "color" : "FFFFFF" },
		{ "v0" : 25, "v1" : 7, "bias" : 99, "cMask" : ["ball" ], "color" : "FFFFFF" },
		{ "v0" : 26, "v1" : 27, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 28, "v1" : 29, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 30, "v1" : 31, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 32, "v1" : 33, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 34, "v1" : 35, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 36, "v1" : 37, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 38, "v1" : 39, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 40, "v1" : 41, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 42, "v1" : 43, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 44, "v1" : 45, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 46, "v1" : 47, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 48, "v1" : 49, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 50, "v1" : 51, "bCoef" : 0.1, "cMask" : [ ], "color" : "555555" },
		{ "v0" : 52, "v1" : 53, "bCoef" : 0.1, "cMask" : [ ], "color" : "555555" },
		{ "v0" : 54, "v1" : 55, "bCoef" : 0.1, "cMask" : [ ], "color" : "555555" },
		{ "v0" : 56, "v1" : 57, "bCoef" : 0.1, "cMask" : [ ], "color" : "555555" },
		{ "v0" : 58, "v1" : 59, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 59, "v1" : 60, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 60, "v1" : 61, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 61, "v1" : 62, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 62, "v1" : 58, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 63, "v1" : 64, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 64, "v1" : 65, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 65, "v1" : 66, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 67, "v1" : 68, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 68, "v1" : 69, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 69, "v1" : 70, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 70, "v1" : 67, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 69, "v1" : 71, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 71, "v1" : 72, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 73, "v1" : 74, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 74, "v1" : 75, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 75, "v1" : 76, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 90 },
		{ "v0" : 76, "v1" : 77, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 79, "v1" : 80, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 80, "v1" : 81, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 81, "v1" : 78, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 120 },
		{ "v0" : 82, "v1" : 83, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 83, "v1" : 84, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 84, "v1" : 85, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 85, "v1" : 86, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 86, "v1" : 87, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 87, "v1" : 88, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 88, "v1" : 82, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 89, "v1" : 90, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 90, "v1" : 91, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 91, "v1" : 92, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 92, "v1" : 93, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 93, "v1" : 94, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 94, "v1" : 95, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 95, "v1" : 85, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 63, "v1" : 96, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 35 },
		{ "v0" : 66, "v1" : 96, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 40 },
		{ "v0" : 97, "v1" : 98, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 99, "v1" : 100, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 101, "v1" : 102, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 103, "v1" : 104, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 105, "v1" : 106, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 107, "v1" : 108, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 109, "v1" : 110, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 111, "v1" : 112, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 113, "v1" : 114, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 115, "v1" : 116, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 117, "v1" : 118, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 119, "v1" : 120, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 121, "v1" : 122, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 123, "v1" : 124, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 125, "v1" : 126, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 127, "v1" : 128, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 129, "v1" : 130, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 131, "v1" : 132, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 133, "v1" : 134, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 135, "v1" : 136, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 137, "v1" : 138, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 139, "v1" : 140, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 141, "v1" : 142, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 143, "v1" : 144, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 145, "v1" : 146, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 147, "v1" : 148, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 149, "v1" : 150, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 151, "v1" : 152, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 153, "v1" : 154, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 155, "v1" : 156, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 157, "v1" : 158, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 159, "v1" : 160, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 161, "v1" : 162, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 163, "v1" : 164, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 165, "v1" : 166, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 167, "v1" : 168, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 169, "v1" : 170, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 171, "v1" : 172, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 30.5 },
		{ "v0" : 173, "v1" : 174, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 30.5 },
		{ "v0" : 175, "v1" : 176, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 39.181884674082816 },
		{ "v0" : 177, "v1" : 178, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 33.147490369972004 },
		{ "v0" : 179, "v1" : 180, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 30.86073135771021 },
		{ "v0" : 181, "v1" : 182, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 35.19051396221234 },
		{ "v0" : 183, "v1" : 184, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 33.147490369972004 },
		{ "v0" : 185, "v1" : 186, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 23.18828044702916 },
		{ "v0" : 187, "v1" : 188, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 74.35999658908567 },
		{ "v0" : 189, "v1" : 190, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 16.4540974994641 },
		{ "v0" : 191, "v1" : 192, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 16.908293850310912 },
		{ "v0" : 193, "v1" : 194, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : -0.8470831489067162 },
		{ "v0" : 195, "v1" : 196, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : -18.2525990617023 },
		{ "v0" : 197, "v1" : 198, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 23.18828044702916 },
		{ "v0" : 199, "v1" : 200, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 3.434732992799685 },
		{ "v0" : 201, "v1" : 202, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 203, "v1" : 204, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 205, "v1" : 206, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 207, "v1" : 208, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 209, "v1" : 210, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 211, "v1" : 212, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 213, "v1" : 214, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 215, "v1" : 216, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 217, "v1" : 218, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 219, "v1" : 220, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 95, "v1" : 182, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 95, "v1" : 180, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 5.1503946672979835 },
		{ "v0" : 95, "v1" : 180, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 50 },
		{ "v0" : 75, "v1" : 186, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : -63.384007741436164 },
		{ "v0" : 75, "v1" : 190, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : -58.93414564563431 },
		{ "v0" : 75, "v1" : 77, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : -63.67867690950191 },
		{ "v0" : 190, "v1" : 202, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 30.35408736274531 },
		{ "v0" : 190, "v1" : 204, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 38.71906519735212 },
		{ "v0" : 190, "v1" : 206, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 40.1697553109201 },
		{ "v0" : 190, "v1" : 208, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 190, "v1" : 210, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 190, "v1" : 212, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 58.83648077641912 },
		{ "v0" : 190, "v1" : 214, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 190, "v1" : 216, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 190, "v1" : 218, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 66.76949146697507 },
		{ "v0" : 190, "v1" : 220, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : -15.362643708078915 },
		{ "v0" : 186, "v1" : 76, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" }

	],

	"goals" : [
		{ "p0" : [-406.3,-70 ], "p1" : [-406.3,70 ], "team" : "red" },
		{ "p0" : [406.3,70 ], "p1" : [406.3,-70 ], "team" : "blue" }

	],

	"discs" : [
		{ "pos" : [0,0 ], "cGroup" : ["ball","kick","score" ], "radius" : 6.25, "color" : "FFCC00", "bCoef" : 0.4, "invMass" : 1.5 },
		
		{ "pos" : [-400,-70 ], "radius" : 5, "trait" : "p", "color" : "FF0000" },
		{ "pos" : [-400,70 ], "radius" : 5, "trait" : "p", "color" : "FF0000" },
		{ "pos" : [400,-70 ], "radius" : 5, "trait" : "p", "color" : "0022FD" },
		{ "pos" : [400,70 ], "radius" : 5, "trait" : "p", "color" : "0022FD" },
		
		{ "pos" : [-400,190 ], "radius" : 3, "bCoef" : 0.1, "invMass" : 0, "color" : "FFCC00", "cMask" : [ ] },
		{ "pos" : [-400,-190 ], "radius" : 3, "bCoef" : 0.1, "invMass" : 0, "color" : "FFCC00", "cMask" : [ ] },
		{ "pos" : [400,-190 ], "radius" : 3, "bCoef" : 0.1, "invMass" : 0, "color" : "FFCC00", "cMask" : [ ] },
		{ "pos" : [400,190 ], "radius" : 3, "bCoef" : 0.1, "invMass" : 0, "color" : "FFCC00", "cMask" : [ ] }

	],

	"planes" : [
		{ "dist" : -220, "normal" : [0,1 ] },
		{ "dist" : -220, "normal" : [0,-1 ] },
		{ "dist" : -490, "normal" : [-1,0 ] },
		{ "dist" : -490, "normal" : [1,0 ] }

	],

	"traits" : {
		"v" : { "cMask" : ["" ] },
		"bb" : { "cMask" : ["ball" ], "bias" : 99, "color" : "1E252A" },
		"pb" : { "bCoef" : 1, "cMask" : ["all" ], "bias" : 99 },
		"nc" : { "cMask" : ["" ], "color" : "737573" },
		"p" : { "radius" : 5, "invMass" : 0 },
		"n" : { "bCoef" : 0.1, "cMask" : ["ball" ], "bias" : 3, "color" : "DA4D4B" },
		"ko" : { "bCoef" : 0.1, "cGroup" : ["redKO","blueKO" ], "cMask" : ["red","blue" ], "color" : "737573" }

	},

	"ballPhysics" : "disc0",

	"playerPhysics" : {
		"bCoef" : 0,
		"acceleration" : 0.11,
		"kickingAcceleration" : 0.083

	}
}`;
const bigMap = `{

	"name" : "✨「 𝗟𝗣𝗙  𝗦𝘁𝗮𝗱𝗶𝘂𝗺 🇵🇪 」✨",

	"width" : 900,

	"height" : 380,

	"redSpawnPoints" : [
		[ -150, -100
		],
		[ -150, 100
		],
		[ -380, 0
		],
		[ -600, 0
		],
		[ -770, 0
		]

	],

	"blueSpawnPoints" : [
		[ 150, 100
		],
		[ 150, -100
		],
		[ 380, 0
		],
		[ 600, 0
		],
		[ 770, 0
		]

	],

	"bg" : { "type" : "hockey" },

	"vertexes" : [
		/* 0 */ { "x" : -700, "y" : -85, "cMask" : [ ], "color" : "F5072F" },
		/* 1 */ { "x" : -700, "y" : 85, "cMask" : [ ], "color" : "F5072F" },
		/* 2 */ { "x" : -710, "y" : -85, "cMask" : [ ], "color" : "F5072F" },
		/* 3 */ { "x" : -730, "y" : 65, "cMask" : [ ] },
		/* 4 */ { "x" : -730, "y" : -65, "cMask" : [ ] },
		/* 5 */ { "x" : -710, "y" : 85, "cMask" : [ ], "color" : "F5072F" },
		/* 6 */ { "x" : 700, "y" : -85, "cMask" : [ ], "color" : "F5072F" },
		/* 7 */ { "x" : 700, "y" : 85, "cMask" : [ ], "color" : "F5072F" },
		/* 8 */ { "x" : 710, "y" : -85, "cMask" : [ ], "color" : "F5072F" },
		/* 9 */ { "x" : 730, "y" : 65, "cMask" : [ ] },
		/* 10 */ { "x" : 730, "y" : -65, "cMask" : [ ] },
		/* 11 */ { "x" : 710, "y" : 85, "cMask" : [ ], "color" : "F5072F" },
		/* 12 */ { "x" : -700, "y" : -285, "cMask" : [ ], "color" : "B6B6B8" },
		/* 13 */ { "x" : -700, "y" : 285, "cMask" : [ ], "color" : "B6B6B8" },
		/* 14 */ { "x" : 700, "y" : 285, "cMask" : [ ], "color" : "B6B6B8" },
		/* 15 */ { "x" : 700, "y" : -285, "cMask" : [ ], "color" : "B6B6B8" },
		/* 16 */ { "x" : 0, "y" : -320, "cMask" : [ ], "color" : "B6B6B8" },
		/* 17 */ { "x" : 0, "y" : -100, "cMask" : [ ], "color" : "B6B6B8" },
		/* 18 */ { "x" : 0, "y" : -350, "cMask" : [ ] },
		/* 19 */ { "x" : 0, "y" : 100, "cMask" : [ ], "color" : "B6B6B8" },
		/* 20 */ { "x" : -700, "y" : -320, "cMask" : [ ] },
		/* 21 */ { "x" : 700, "y" : -320, "cMask" : [ ] },
		/* 22 */ { "x" : -700, "y" : 320, "cMask" : [ ] },
		/* 23 */ { "x" : 0, "y" : 320, "cMask" : [ ], "color" : "B6B6B8" },
		/* 24 */ { "x" : 0, "y" : 350, "cMask" : [ ] },
		/* 25 */ { "x" : 700, "y" : 320, "cMask" : [ ] },
		/* 26 */ { "x" : -450, "y" : -342, "cMask" : [ ] },
		/* 27 */ { "x" : -450, "y" : -297, "cMask" : [ ] },
		/* 28 */ { "x" : -350, "y" : -342, "cMask" : [ ] },
		/* 29 */ { "x" : -350, "y" : -297, "cMask" : [ ] },
		/* 30 */ { "x" : -250, "y" : -342, "cMask" : [ ] },
		/* 31 */ { "x" : -250, "y" : -297, "cMask" : [ ] },
		/* 32 */ { "x" : 250, "y" : -342, "cMask" : [ ] },
		/* 33 */ { "x" : 250, "y" : -297, "cMask" : [ ] },
		/* 34 */ { "x" : 350, "y" : -342, "cMask" : [ ] },
		/* 35 */ { "x" : 350, "y" : -297, "cMask" : [ ] },
		/* 36 */ { "x" : 450, "y" : -342, "cMask" : [ ] },
		/* 37 */ { "x" : 450, "y" : -297, "cMask" : [ ] },
		/* 38 */ { "x" : -450, "y" : 298, "cMask" : [ ] },
		/* 39 */ { "x" : -450, "y" : 345, "cMask" : [ ] },
		/* 40 */ { "x" : -350, "y" : 298, "cMask" : [ ] },
		/* 41 */ { "x" : -350, "y" : 345, "cMask" : [ ] },
		/* 42 */ { "x" : -250, "y" : 298, "cMask" : [ ] },
		/* 43 */ { "x" : -250, "y" : 345, "cMask" : [ ] },
		/* 44 */ { "x" : 250, "y" : 298, "cMask" : [ ] },
		/* 45 */ { "x" : 250, "y" : 345, "cMask" : [ ] },
		/* 46 */ { "x" : 350, "y" : 298, "cMask" : [ ] },
		/* 47 */ { "x" : 350, "y" : 345, "cMask" : [ ] },
		/* 48 */ { "x" : 450, "y" : 298, "cMask" : [ ] },
		/* 49 */ { "x" : 450, "y" : 345, "cMask" : [ ] },
		/* 50 */ { "x" : -730, "y" : -160, "cMask" : [ ] },
		/* 51 */ { "x" : -675, "y" : -160, "cMask" : [ ] },
		/* 52 */ { "x" : -730, "y" : 160, "cMask" : [ ] },
		/* 53 */ { "x" : -675, "y" : 160, "cMask" : [ ] },
		/* 54 */ { "x" : 675, "y" : -160, "cMask" : [ ] },
		/* 55 */ { "x" : 730, "y" : -160, "cMask" : [ ] },
		/* 56 */ { "x" : 675, "y" : 160, "cMask" : [ ] },
		/* 57 */ { "x" : 730, "y" : 160, "cMask" : [ ] },
		/* 58 */ { "x" : -76.70789660935554, "y" : 38.34883878849523, "cMask" : [ ], "color" : "B6B6B8" },
		/* 59 */ { "x" : -76.70789660935554, "y" : 31.08816078141045, "cMask" : [ ], "color" : "B6B6B8" },
		/* 60 */ { "x" : -62.18654059518597, "y" : 23.827482774325667, "cMask" : [ ], "color" : "B6B6B8" },
		/* 61 */ { "x" : -33.14382856684685, "y" : 23.827482774325667, "cMask" : [ ], "color" : "B6B6B8" },
		/* 62 */ { "x" : -33.14382856684685, "y" : 38.34883878849523, "cMask" : [ ], "color" : "B6B6B8" },
		/* 63 */ { "x" : -76.70789660935554, "y" : 12.936465763698493, "cMask" : [ ], "curve" : 35, "color" : "B6B6B8" },
		/* 64 */ { "x" : -76.70789660935554, "y" : -41.51861928943738, "cMask" : [ ], "color" : "B6B6B8" },
		/* 65 */ { "x" : -62.18654059518597, "y" : -41.51861928943738, "cMask" : [ ], "color" : "B6B6B8" },
		/* 66 */ { "x" : -62.18654059518597, "y" : -3.763093652596507, "cMask" : [ ], "curve" : 40, "color" : "B6B6B8" },
		/* 67 */ { "x" : -22.252811556219672, "y" : 38.34883878849523, "cMask" : [ ], "color" : "B6B6B8" },
		/* 68 */ { "x" : -22.252811556219672, "y" : 8.580058959447626, "cMask" : [ ], "color" : "B6B6B8" },
		/* 69 */ { "x" : -7.731455542050106, "y" : 4.2236521551967545, "cMask" : [ ], "color" : "B6B6B8" },
		/* 70 */ { "x" : -7.731455542050106, "y" : 38.34883878849523, "cMask" : [ ], "color" : "B6B6B8" },
		/* 71 */ { "x" : 2.43349366786859, "y" : 2.0454487530713177, "cMask" : [ ], "color" : "B6B6B8" },
		/* 72 */ { "x" : 5.337764870702504, "y" : 2.0454487530713177, "cMask" : [ ], "color" : "B6B6B8" },
		/* 73 */ { "x" : -22.252811556219672, "y" : -3.763093652596507, "cMask" : [ ], "color" : "B6B6B8" },
		/* 74 */ { "x" : -22.252811556219672, "y" : -41.51861928943738, "cMask" : [ ], "color" : "B6B6B8" },
		/* 75 */ { "x" : 5.337764870702504, "y" : -41.51861928943738, "cMask" : [ ], "color" : "B6B6B8" },
		/* 76 */ { "x" : 21.31125648628903, "y" : -23.36692427172542, "cMask" : [ ], "color" : "B6B6B8" },
		/* 77 */ { "x" : 21.31125648628903, "y" : -8.845568257555856, "cMask" : [ ], "color" : "B6B6B8" },
		/* 78 */ { "x" : 3.1595614685770688, "y" : -12.475907261098248, "cMask" : [ ], "color" : "B6B6B8" },
		/* 79 */ { "x" : -7.731455542050106, "y" : -6.66736485543042, "cMask" : [ ], "color" : "B6B6B8" },
		/* 80 */ { "x" : -7.731455542050106, "y" : -26.997263275267812, "cMask" : [ ], "color" : "B6B6B8" },
		/* 81 */ { "x" : 3.1595614685770688, "y" : -26.997263275267812, "cMask" : [ ], "color" : "B6B6B8" },
		/* 82 */ { "x" : 32.202273496916206, "y" : 38.34883878849523, "cMask" : [ ], "color" : "B6B6B8" },
		/* 83 */ { "x" : 32.202273496916206, "y" : -2.3109580511795498, "cMask" : [ ], "color" : "B6B6B8" },
		/* 84 */ { "x" : 46.72362951108576, "y" : -3.763093652596507, "cMask" : [ ], "color" : "B6B6B8" },
		/* 85 */ { "x" : 68.50566353234011, "y" : -3.763093652596507, "cMask" : [ ], "color" : "B6B6B8" },
		/* 86 */ { "x" : 68.50566353234011, "y" : 2.0454487530713177, "cMask" : [ ], "color" : "B6B6B8" },
		/* 87 */ { "x" : 46.72362951108576, "y" : 2.0454487530713177, "cMask" : [ ], "color" : "B6B6B8" },
		/* 88 */ { "x" : 46.72362951108576, "y" : 38.34883878849523, "cMask" : [ ], "color" : "B6B6B8" },
		/* 89 */ { "x" : 32.202273496916206, "y" : -8.845568257555856, "cMask" : [ ], "color" : "B6B6B8" },
		/* 90 */ { "x" : 32.202273496916206, "y" : -41.51861928943738, "cMask" : [ ], "color" : "B6B6B8" },
		/* 91 */ { "x" : 75.7663415394249, "y" : -41.51861928943738, "cMask" : [ ], "color" : "B6B6B8" },
		/* 92 */ { "x" : 75.7663415394249, "y" : -26.997263275267812, "cMask" : [ ], "color" : "B6B6B8" },
		/* 93 */ { "x" : 46.72362951108576, "y" : -26.997263275267812, "cMask" : [ ], "color" : "B6B6B8" },
		/* 94 */ { "x" : 46.72362951108576, "y" : -12.475907261098248, "cMask" : [ ], "color" : "B6B6B8" },
		/* 95 */ { "x" : 68.50566353234011, "y" : -12.475907261098248, "cMask" : [ ], "color" : "B6B6B8" },
		/* 96 */ { "x" : 83.02701954650968, "y" : -3.037025851888029, "cMask" : [ ], "color" : "B6B6B8" },
		/* 97 */ { "x" : -75.25576100793857, "y" : -40.7925514887289, "cMask" : [ ], "color" : "B6B6B8" },
		/* 98 */ { "x" : -75.25576100793857, "y" : 12.210397962990013, "cMask" : [ ], "color" : "B6B6B8" },
		/* 99 */ { "x" : -73.80362540652163, "y" : -40.7925514887289, "cMask" : [ ], "color" : "B6B6B8" },
		/* 100 */ { "x" : -73.80362540652163, "y" : 10.758262361573058, "cMask" : [ ], "color" : "B6B6B8" },
		/* 101 */ { "x" : -72.35148980510466, "y" : -40.7925514887289, "cMask" : [ ], "color" : "B6B6B8" },
		/* 102 */ { "x" : -72.35148980510466, "y" : 10.032194560864578, "cMask" : [ ], "color" : "B6B6B8" },
		/* 103 */ { "x" : -70.89935420368772, "y" : -40.7925514887289, "cMask" : [ ], "color" : "B6B6B8" },
		/* 104 */ { "x" : -70.89935420368772, "y" : 10.032194560864578, "cMask" : [ ], "color" : "B6B6B8" },
		/* 105 */ { "x" : -69.44721860227077, "y" : -40.7925514887289, "cMask" : [ ], "color" : "B6B6B8" },
		/* 106 */ { "x" : -69.44721860227077, "y" : 9.3061267601561, "cMask" : [ ], "color" : "B6B6B8" },
		/* 107 */ { "x" : -67.99508300085381, "y" : -40.7925514887289, "cMask" : [ ], "color" : "B6B6B8" },
		/* 108 */ { "x" : -67.99508300085381, "y" : 8.580058959447626, "cMask" : [ ], "color" : "B6B6B8" },
		/* 109 */ { "x" : -66.54294739943684, "y" : -40.7925514887289, "cMask" : [ ], "color" : "B6B6B8" },
		/* 110 */ { "x" : -66.54294739943684, "y" : 7.853991158739145, "cMask" : [ ], "color" : "B6B6B8" },
		/* 111 */ { "x" : -65.0908117980199, "y" : -40.7925514887289, "cMask" : [ ], "color" : "B6B6B8" },
		/* 112 */ { "x" : -65.0908117980199, "y" : 7.853991158739145, "cMask" : [ ], "color" : "B6B6B8" },
		/* 113 */ { "x" : -63.63867619660293, "y" : -40.7925514887289, "cMask" : [ ], "color" : "B6B6B8" },
		/* 114 */ { "x" : -63.63867619660293, "y" : 7.127923358030666, "cMask" : [ ], "color" : "B6B6B8" },
		/* 115 */ { "x" : -20.800675954802713, "y" : -40.7925514887289, "cMask" : [ ], "color" : "B6B6B8" },
		/* 116 */ { "x" : -20.800675954802713, "y" : -3.763093652596507, "cMask" : [ ], "color" : "B6B6B8" },
		/* 117 */ { "x" : -19.348540353385754, "y" : -40.7925514887289, "cMask" : [ ], "color" : "B6B6B8" },
		/* 118 */ { "x" : -19.348540353385754, "y" : -4.489161453304986, "cMask" : [ ], "color" : "B6B6B8" },
		/* 119 */ { "x" : -17.8964047519688, "y" : -40.7925514887289, "cMask" : [ ], "color" : "B6B6B8" },
		/* 120 */ { "x" : -17.8964047519688, "y" : -4.489161453304986, "cMask" : [ ], "color" : "B6B6B8" },
		/* 121 */ { "x" : -16.444269150551847, "y" : -40.7925514887289, "cMask" : [ ], "color" : "B6B6B8" },
		/* 122 */ { "x" : -16.444269150551847, "y" : -5.578263154367702, "cMask" : [ ], "color" : "B6B6B8" },
		/* 123 */ { "x" : -15.718201349843367, "y" : -40.7925514887289, "cMask" : [ ], "color" : "B6B6B8" },
		/* 124 */ { "x" : -15.718201349843367, "y" : -5.578263154367702, "cMask" : [ ], "color" : "B6B6B8" },
		/* 125 */ { "x" : -14.26606574842641, "y" : -40.7925514887289, "cMask" : [ ], "color" : "B6B6B8" },
		/* 126 */ { "x" : -14.26606574842641, "y" : -5.941297054721942, "cMask" : [ ], "color" : "B6B6B8" },
		/* 127 */ { "x" : -12.813930147009453, "y" : -40.7925514887289, "cMask" : [ ], "color" : "B6B6B8" },
		/* 128 */ { "x" : -12.813930147009453, "y" : -5.941297054721942, "cMask" : [ ], "color" : "B6B6B8" },
		/* 129 */ { "x" : -11.361794545592499, "y" : -40.7925514887289, "cMask" : [ ], "color" : "B6B6B8" },
		/* 130 */ { "x" : -11.361794545592499, "y" : -6.30433095507618, "cMask" : [ ], "color" : "B6B6B8" },
		/* 131 */ { "x" : -9.909658944175538, "y" : -40.7925514887289, "cMask" : [ ], "color" : "B6B6B8" },
		/* 132 */ { "x" : -9.909658944175538, "y" : -6.30433095507618, "cMask" : [ ], "color" : "B6B6B8" },
		/* 133 */ { "x" : -8.457523342758584, "y" : -40.7925514887289, "cMask" : [ ], "color" : "B6B6B8" },
		/* 134 */ { "x" : -8.457523342758584, "y" : -6.66736485543042, "cMask" : [ ], "color" : "B6B6B8" },
		/* 135 */ { "x" : 32.92834129762468, "y" : -40.06648368802042, "cMask" : [ ], "color" : "B6B6B8" },
		/* 136 */ { "x" : 75.04027373871641, "y" : -40.06648368802042, "cMask" : [ ], "color" : "B6B6B8" },
		/* 137 */ { "x" : 32.92834129762468, "y" : -38.614348086603464, "cMask" : [ ], "color" : "B6B6B8" },
		/* 138 */ { "x" : 75.04027373871641, "y" : -38.614348086603464, "cMask" : [ ], "color" : "B6B6B8" },
		/* 139 */ { "x" : 32.92834129762468, "y" : -37.1622124851865, "cMask" : [ ], "color" : "B6B6B8" },
		/* 140 */ { "x" : 75.04027373871641, "y" : -37.1622124851865, "cMask" : [ ], "color" : "B6B6B8" },
		/* 141 */ { "x" : 32.92834129762468, "y" : -35.71007688376955, "cMask" : [ ], "color" : "B6B6B8" },
		/* 142 */ { "x" : 75.04027373871641, "y" : -35.71007688376955, "cMask" : [ ], "color" : "B6B6B8" },
		/* 143 */ { "x" : 32.92834129762468, "y" : -34.2579412823526, "cMask" : [ ], "color" : "B6B6B8" },
		/* 144 */ { "x" : 75.04027373871641, "y" : -34.2579412823526, "cMask" : [ ], "color" : "B6B6B8" },
		/* 145 */ { "x" : 32.92834129762468, "y" : -32.805805680935634, "cMask" : [ ], "color" : "B6B6B8" },
		/* 146 */ { "x" : 75.04027373871641, "y" : -32.805805680935634, "cMask" : [ ], "color" : "B6B6B8" },
		/* 147 */ { "x" : 32.92834129762468, "y" : -31.35367007951868, "cMask" : [ ], "color" : "B6B6B8" },
		/* 148 */ { "x" : 75.04027373871641, "y" : -31.35367007951868, "cMask" : [ ], "color" : "B6B6B8" },
		/* 149 */ { "x" : 32.92834129762468, "y" : -29.901534478101727, "cMask" : [ ], "color" : "B6B6B8" },
		/* 150 */ { "x" : 75.04027373871641, "y" : -29.901534478101727, "cMask" : [ ], "color" : "B6B6B8" },
		/* 151 */ { "x" : 32.92834129762468, "y" : -28.449398876684764, "cMask" : [ ], "color" : "B6B6B8" },
		/* 152 */ { "x" : 75.04027373871641, "y" : -28.449398876684764, "cMask" : [ ], "color" : "B6B6B8" },
		/* 153 */ { "x" : 33.654409098333154, "y" : -30.627602278810205, "cMask" : [ ], "color" : "B6B6B8" },
		/* 154 */ { "x" : 33.654409098333154, "y" : -10.297703858972811, "cMask" : [ ], "color" : "B6B6B8" },
		/* 155 */ { "x" : 35.10654469975011, "y" : -30.627602278810205, "cMask" : [ ], "color" : "B6B6B8" },
		/* 156 */ { "x" : 35.10654469975011, "y" : -10.297703858972811, "cMask" : [ ], "color" : "B6B6B8" },
		/* 157 */ { "x" : 36.558680301167065, "y" : -30.627602278810205, "cMask" : [ ], "color" : "B6B6B8" },
		/* 158 */ { "x" : 36.558680301167065, "y" : -10.297703858972811, "cMask" : [ ], "color" : "B6B6B8" },
		/* 159 */ { "x" : 38.01081590258403, "y" : -30.627602278810205, "cMask" : [ ], "color" : "B6B6B8" },
		/* 160 */ { "x" : 38.01081590258403, "y" : -10.297703858972811, "cMask" : [ ], "color" : "B6B6B8" },
		/* 161 */ { "x" : 39.46295150400098, "y" : -30.627602278810205, "cMask" : [ ], "color" : "B6B6B8" },
		/* 162 */ { "x" : 39.46295150400098, "y" : -10.297703858972811, "cMask" : [ ], "color" : "B6B6B8" },
		/* 163 */ { "x" : 40.91508710541794, "y" : -30.627602278810205, "cMask" : [ ], "color" : "B6B6B8" },
		/* 164 */ { "x" : 40.91508710541794, "y" : -10.297703858972811, "cMask" : [ ], "color" : "B6B6B8" },
		/* 165 */ { "x" : 42.367222706834895, "y" : -30.627602278810205, "cMask" : [ ], "color" : "B6B6B8" },
		/* 166 */ { "x" : 42.367222706834895, "y" : -10.297703858972811, "cMask" : [ ], "color" : "B6B6B8" },
		/* 167 */ { "x" : 43.81935830825186, "y" : -30.627602278810205, "cMask" : [ ], "color" : "B6B6B8" },
		/* 168 */ { "x" : 43.81935830825186, "y" : -10.297703858972811, "cMask" : [ ], "color" : "B6B6B8" },
		/* 169 */ { "x" : 45.271493909668806, "y" : -30.627602278810205, "cMask" : [ ], "color" : "B6B6B8" },
		/* 170 */ { "x" : 45.271493909668806, "y" : -10.297703858972811, "cMask" : [ ], "color" : "B6B6B8" },
		/* 171 */ { "x" : -63.63867619660293, "y" : -3.763093652596507, "cMask" : [ ], "curve" : 30.5, "color" : "B6B6B8" },
		/* 172 */ { "x" : 68.31204840652863, "y" : -6.231719743439167, "cMask" : [ ], "curve" : 30.5, "color" : "B6B6B8" },
		/* 173 */ { "x" : -63.10622352170594, "y" : -1.5848902504710713, "cMask" : [ ], "color" : "B6B6B8" },
		/* 174 */ { "x" : 55.24282799377601, "y" : -9.135990946273079, "cMask" : [ ], "color" : "B6B6B8" },
		/* 175 */ { "x" : -68.18869812666527, "y" : 1.755026064354094, "cMask" : [ ], "color" : "B6B6B8" },
		/* 176 */ { "x" : 45.07787878385732, "y" : -10.588126547690036, "cMask" : [ ], "color" : "B6B6B8" },
		/* 177 */ { "x" : -64.5583591231229, "y" : 1.755026064354094, "cMask" : [ ], "color" : "B6B6B8" },
		/* 178 */ { "x" : 55.9688957944845, "y" : -9.862058746981559, "cMask" : [ ], "color" : "B6B6B8" },
		/* 179 */ { "x" : -63.0993102784863, "y" : 2.252901444237491, "cMask" : [ ], "color" : "B6B6B8" },
		/* 180 */ { "x" : 51.61940223345327, "y" : -9.36418336709816, "cMask" : [ ], "color" : "B6B6B8" },
		/* 181 */ { "x" : -66.72964928202869, "y" : 4.431104846362928, "cMask" : [ ], "color" : "B6B6B8" },
		/* 182 */ { "x" : 64.68862264620587, "y" : -8.638115566389683, "cMask" : [ ], "color" : "B6B6B8" },
		/* 183 */ { "x" : -63.0993102784863, "y" : 5.1571726470714045, "cMask" : [ ], "color" : "B6B6B8" },
		/* 184 */ { "x" : 47.2629954292024, "y" : -7.912047765681205, "cMask" : [ ], "color" : "B6B6B8" },
		/* 185 */ { "x" : -65.27751368061175, "y" : 8.061443849905318, "cMask" : [ ], "color" : "B6B6B8" },
		/* 186 */ { "x" : 17.494215600154785, "y" : -9.36418336709816, "cMask" : [ ], "color" : "B6B6B8" },
		/* 187 */ { "x" : -63.99134023212772, "y" : 3.207161665771051, "cMask" : [ ], "color" : "B6B6B8" },
		/* 188 */ { "x" : -38.57896720733098, "y" : -6.231719743439167, "cMask" : [ ], "color" : "B6B6B8" },
		/* 189 */ { "x" : -64.71740803283619, "y" : 3.9332294664795304, "cMask" : [ ], "color" : "B6B6B8" },
		/* 190 */ { "x" : 15.150050045096414, "y" : -10.588126547690036, "cMask" : [ ], "color" : "B6B6B8" },
		/* 191 */ { "x" : -62.53920463071076, "y" : -1.8753129391882983, "cMask" : [ ], "color" : "B6B6B8" },
		/* 192 */ { "x" : -38.57896720733098, "y" : -7.6838553448561235, "cMask" : [ ], "color" : "B6B6B8" },
		/* 193 */ { "x" : -62.53920463071076, "y" : 4.659297267188007, "cMask" : [ ], "color" : "B6B6B8" },
		/* 194 */ { "x" : -15.344797584659672, "y" : -9.135990946273079, "cMask" : [ ], "color" : "B6B6B8" },
		/* 195 */ { "x" : -66.66743009305196, "y" : 0.3028904629371376, "cMask" : [ ], "color" : "B6B6B8" },
		/* 196 */ { "x" : -47.06359947392305, "y" : -0.4231773377713408, "cMask" : [ ], "color" : "B6B6B8" },
		/* 197 */ { "x" : -62.41472193709564, "y" : -2.1657467068209377, "cMask" : [ ], "color" : "B6B6B8" },
		/* 198 */ { "x" : -49.345501524343035, "y" : -1.4396789061124604, "cMask" : [ ], "color" : "B6B6B8" },
		/* 199 */ { "x" : -9.909658944175538, "y" : -7.6838553448561235, "cMask" : [ ], "color" : "B6B6B8" },
		/* 200 */ { "x" : 22.76339208770598, "y" : -9.135990946273079, "cMask" : [ ], "color" : "B6B6B8" },
		/* 201 */ { "x" : -9.183591143467062, "y" : -40.7925514887289, "cMask" : [ ], "color" : "B6B6B8" },
		/* 202 */ { "x" : 8.242036073536417, "y" : -40.7925514887289, "cMask" : [ ], "color" : "B6B6B8" },
		/* 203 */ { "x" : -9.183591143467062, "y" : -39.34041588731194, "cMask" : [ ], "color" : "B6B6B8" },
		/* 204 */ { "x" : 11.872375077078807, "y" : -39.34041588731194, "cMask" : [ ], "color" : "B6B6B8" },
		/* 205 */ { "x" : -9.183591143467062, "y" : -37.888280285894986, "cMask" : [ ], "color" : "B6B6B8" },
		/* 206 */ { "x" : 14.776646279912718, "y" : -37.888280285894986, "cMask" : [ ], "color" : "B6B6B8" },
		/* 207 */ { "x" : -9.183591143467062, "y" : -36.43614468447804, "cMask" : [ ], "color" : "B6B6B8" },
		/* 208 */ { "x" : 16.22878188132968, "y" : -36.43614468447804, "cMask" : [ ], "color" : "B6B6B8" },
		/* 209 */ { "x" : -9.183591143467062, "y" : -34.98400908306107, "cMask" : [ ], "color" : "B6B6B8" },
		/* 210 */ { "x" : 16.954849682038155, "y" : -34.98400908306107, "cMask" : [ ], "color" : "B6B6B8" },
		/* 211 */ { "x" : -9.183591143467062, "y" : -33.53187348164412, "cMask" : [ ], "color" : "B6B6B8" },
		/* 212 */ { "x" : 17.680917482746633, "y" : -33.53187348164412, "cMask" : [ ], "color" : "B6B6B8" },
		/* 213 */ { "x" : -9.183591143467062, "y" : -32.07973788022716, "cMask" : [ ], "color" : "B6B6B8" },
		/* 214 */ { "x" : 18.40698528345511, "y" : -32.07973788022716, "cMask" : [ ], "color" : "B6B6B8" },
		/* 215 */ { "x" : -9.183591143467062, "y" : -30.627602278810205, "cMask" : [ ], "color" : "B6B6B8" },
		/* 216 */ { "x" : 19.133053084163592, "y" : -30.627602278810205, "cMask" : [ ], "color" : "B6B6B8" },
		/* 217 */ { "x" : -9.183591143467062, "y" : -29.17546667739325, "cMask" : [ ], "color" : "B6B6B8" },
		/* 218 */ { "x" : 19.859120884872066, "y" : -29.17546667739325, "cMask" : [ ], "color" : "B6B6B8" },
		/* 219 */ { "x" : -9.183591143467062, "y" : -27.72333107597629, "cMask" : [ ], "color" : "B6B6B8" },
		/* 220 */ { "x" : 20.585188685580544, "y" : -27.72333107597629, "cMask" : [ ], "color" : "B6B6B8" },
		/* 221 */ { "x" : 0, "y" : -100, "cMask" : ["red","blue" ], "color" : "B6B6B8", "bCoef" : 0.1, "curve" : 180, "cGroup" : ["blueKO" ] },
		/* 222 */ { "x" : 0, "y" : 100, "cMask" : ["red","blue" ], "color" : "B6B6B8", "bCoef" : 0.1, "curve" : 180, "cGroup" : ["blueKO" ] },
		/* 223 */ { "x" : 0, "y" : -100, "cMask" : ["wall" ], "color" : "B6B6B8", "bCoef" : 0.1, "curve" : 180 },
		/* 224 */ { "x" : 0, "y" : 100, "cMask" : ["wall" ], "color" : "B6B6B8", "bCoef" : 0.1, "curve" : 180 },
		/* 225 */ { "x" : 0, "y" : -100, "cMask" : ["wall" ], "color" : "B6B6B8", "bCoef" : 0.1, "curve" : 180 },
		/* 226 */ { "x" : 0, "y" : 100, "cMask" : ["wall" ], "color" : "B6B6B8", "bCoef" : 0.1, "curve" : 180 },
		/* 227 */ { "x" : 0, "y" : -100, "cMask" : ["red","blue" ], "color" : "B6B6B8", "cGroup" : ["redKO" ], "curve" : 180 },
		/* 228 */ { "x" : 0, "y" : 100, "cMask" : ["red","blue" ], "color" : "B6B6B8", "cGroup" : ["redKO" ], "curve" : 180 },
		/* 229 */ { "x" : 0, "y" : -100, "cMask" : ["wall" ], "color" : "B6B6B8", "bCoef" : 0.1, "curve" : 180 },
		/* 230 */ { "x" : 0, "y" : 100, "cMask" : ["wall" ], "color" : "B6B6B8", "bCoef" : 0.1, "curve" : 180 },
		/* 231 */ { "x" : 0, "y" : -100, "cMask" : ["wall" ], "color" : "B6B6B8", "bCoef" : 0.1, "curve" : 180 },
		/* 232 */ { "x" : 0, "y" : 100, "cMask" : ["wall" ], "color" : "B6B6B8", "bCoef" : 0.1, "curve" : 180 }

	],

	"segments" : [
		{ "v0" : 0, "v1" : 1, "cMask" : [ ], "color" : "FFCCCC" },
		{ "v0" : 0, "v1" : 2, "bias" : 3, "bCoef" : 0.1, "cMask" : ["ball" ], "color" : "F5072F" },
		{ "v0" : 4, "v1" : 3, "bias" : 3, "bCoef" : 0.1, "cMask" : ["ball" ], "color" : "FFFFFF" },
		{ "v0" : 5, "v1" : 1, "bias" : 3, "bCoef" : 0.1, "cMask" : ["ball" ], "color" : "F5072F" },
		{ "v0" : 4, "v1" : 2, "bias" : -3, "bCoef" : 0.1, "curve" : 89.99999999999999, "curveF" : 1.0000000000000002, "cMask" : ["ball" ], "color" : "F5072F" },
		{ "v0" : 5, "v1" : 3, "bias" : -3, "bCoef" : 0.1, "curve" : 89.99999999999999, "curveF" : 1.0000000000000002, "cMask" : ["ball" ], "color" : "F5072F" },
		{ "v0" : 7, "v1" : 6, "cMask" : [ ], "color" : "CCCCFF" },
		{ "v0" : 8, "v1" : 6, "bias" : 3, "bCoef" : 0.1, "cMask" : ["ball" ], "color" : "F5072F" },
		{ "v0" : 9, "v1" : 10, "bias" : 3, "bCoef" : 0.1, "cMask" : ["ball" ], "color" : "FFFFFF" },
		{ "v0" : 7, "v1" : 11, "bias" : 3, "bCoef" : 0.1, "cMask" : ["ball" ], "color" : "F5072F" },
		{ "v0" : 8, "v1" : 10, "bias" : -3, "bCoef" : 0.1, "curve" : 89.99999999999999, "curveF" : 1.0000000000000002, "cMask" : ["ball" ], "color" : "F5072F" },
		{ "v0" : 9, "v1" : 11, "bias" : -3, "bCoef" : 0.1, "curve" : 89.99999999999999, "curveF" : 1.0000000000000002, "cMask" : ["ball" ], "color" : "F5072F" },
		{ "v0" : 12, "v1" : 13, "curve" : 180, "curveF" : 6.123233995736766e-17, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 14, "v1" : 15, "curve" : 180, "curveF" : 6.123233995736766e-17, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 16, "v1" : 17, "bCoef" : 0.1, "cMask" : ["red","blue" ], "cGroup" : ["redKO","blueKO" ], "color" : "B6B6B8" },
		{ "v0" : 16, "v1" : 18, "bCoef" : 0.1, "vis" : false, "cMask" : ["red","blue" ], "cGroup" : ["redKO","blueKO" ], "color" : "737573" },
		{ "v0" : 222, "v1" : 221, "bCoef" : 0.1, "curve" : 180, "curveF" : 6.123233995736766e-17, "cMask" : ["red","blue" ], "cGroup" : ["blueKO" ], "color" : "B6B6B8" },
		{ "v0" : 224, "v1" : 223, "bCoef" : 0.1, "curve" : 180, "curveF" : 6.123233995736766e-17, "cMask" : ["wall" ], "color" : "B6B6B8" },
		{ "v0" : 226, "v1" : 225, "bCoef" : 0.1, "curve" : 180, "curveF" : 6.123233995736766e-17, "cMask" : ["wall" ], "color" : "B6B6B8" },
		{ "v0" : 21, "v1" : 20, "bias" : 99, "cMask" : ["ball" ], "color" : "FFFFFF" },
		{ "v0" : 20, "v1" : 0, "bias" : 99, "cMask" : ["ball" ], "color" : "FFFFFF" },
		{ "v0" : 1, "v1" : 22, "bias" : 99, "cMask" : ["ball" ], "color" : "FFFFFF" },
		{ "v0" : 23, "v1" : 19, "bCoef" : 0.1, "cMask" : ["red","blue" ], "cGroup" : ["redKO","blueKO" ], "color" : "B6B6B8" },
		{ "v0" : 23, "v1" : 24, "bCoef" : 0.1, "vis" : false, "cMask" : ["red","blue" ], "cGroup" : ["redKO","blueKO" ], "color" : "737573" },
		{ "v0" : 227, "v1" : 228, "bCoef" : 0.1, "curve" : 180, "curveF" : 6.123233995736766e-17, "cMask" : ["red","blue" ], "cGroup" : ["redKO" ], "color" : "B6B6B8" },
		{ "v0" : 229, "v1" : 230, "bCoef" : 0.1, "curve" : 180, "curveF" : 6.123233995736766e-17, "cMask" : ["wall" ], "color" : "B6B6B8" },
		{ "v0" : 231, "v1" : 232, "bCoef" : 0.1, "curve" : 180, "curveF" : 6.123233995736766e-17, "cMask" : ["wall" ], "color" : "B6B6B8" },
		{ "v0" : 22, "v1" : 25, "bias" : 99, "cMask" : ["ball" ], "color" : "FFFFFF" },
		{ "v0" : 6, "v1" : 21, "bias" : 99, "cMask" : ["ball" ], "color" : "FFFFFF" },
		{ "v0" : 25, "v1" : 7, "bias" : 99, "cMask" : ["ball" ], "color" : "FFFFFF" },
		{ "v0" : 26, "v1" : 27, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 28, "v1" : 29, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 30, "v1" : 31, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 32, "v1" : 33, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 34, "v1" : 35, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 36, "v1" : 37, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 38, "v1" : 39, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 40, "v1" : 41, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 42, "v1" : 43, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 44, "v1" : 45, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 46, "v1" : 47, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 48, "v1" : 49, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 50, "v1" : 51, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 52, "v1" : 53, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 54, "v1" : 55, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 56, "v1" : 57, "bCoef" : 0.1, "cMask" : [ ], "color" : "FFFFFF" },
		{ "v0" : 58, "v1" : 59, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 59, "v1" : 60, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 60, "v1" : 61, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 61, "v1" : 62, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 62, "v1" : 58, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 63, "v1" : 64, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 64, "v1" : 65, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 65, "v1" : 66, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 67, "v1" : 68, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 68, "v1" : 69, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 69, "v1" : 70, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 70, "v1" : 67, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 69, "v1" : 71, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 71, "v1" : 72, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 73, "v1" : 74, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 74, "v1" : 75, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 75, "v1" : 76, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 90 },
		{ "v0" : 76, "v1" : 77, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 79, "v1" : 80, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 80, "v1" : 81, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 81, "v1" : 78, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 120 },
		{ "v0" : 82, "v1" : 83, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 83, "v1" : 84, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 84, "v1" : 85, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 85, "v1" : 86, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 86, "v1" : 87, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 87, "v1" : 88, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 88, "v1" : 82, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 89, "v1" : 90, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 90, "v1" : 91, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 91, "v1" : 92, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 92, "v1" : 93, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 93, "v1" : 94, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 94, "v1" : 95, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 95, "v1" : 85, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 63, "v1" : 96, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 35 },
		{ "v0" : 66, "v1" : 96, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 40 },
		{ "v0" : 97, "v1" : 98, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 99, "v1" : 100, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 101, "v1" : 102, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 103, "v1" : 104, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 105, "v1" : 106, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 107, "v1" : 108, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 109, "v1" : 110, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 111, "v1" : 112, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 113, "v1" : 114, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 115, "v1" : 116, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 117, "v1" : 118, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 119, "v1" : 120, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 121, "v1" : 122, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 123, "v1" : 124, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 125, "v1" : 126, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 127, "v1" : 128, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 129, "v1" : 130, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 131, "v1" : 132, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 133, "v1" : 134, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 135, "v1" : 136, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 137, "v1" : 138, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 139, "v1" : 140, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 141, "v1" : 142, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 143, "v1" : 144, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 145, "v1" : 146, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 147, "v1" : 148, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 149, "v1" : 150, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 151, "v1" : 152, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 153, "v1" : 154, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 155, "v1" : 156, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 157, "v1" : 158, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 159, "v1" : 160, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 161, "v1" : 162, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 163, "v1" : 164, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 165, "v1" : 166, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 167, "v1" : 168, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 169, "v1" : 170, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 171, "v1" : 172, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 30.5 },
		{ "v0" : 173, "v1" : 174, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 30.5 },
		{ "v0" : 175, "v1" : 176, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 39.181884674082816 },
		{ "v0" : 177, "v1" : 178, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 33.147490369972004 },
		{ "v0" : 179, "v1" : 180, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 30.86073135771021 },
		{ "v0" : 181, "v1" : 182, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 35.19051396221234 },
		{ "v0" : 183, "v1" : 184, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 33.147490369972004 },
		{ "v0" : 185, "v1" : 186, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 23.18828044702916 },
		{ "v0" : 187, "v1" : 188, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 74.35999658908567 },
		{ "v0" : 189, "v1" : 190, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 16.4540974994641 },
		{ "v0" : 191, "v1" : 192, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 16.908293850310912 },
		{ "v0" : 193, "v1" : 194, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : -0.8470831489067162 },
		{ "v0" : 195, "v1" : 196, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : -18.2525990617023 },
		{ "v0" : 197, "v1" : 198, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 23.18828044702916 },
		{ "v0" : 199, "v1" : 200, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 3.434732992799685 },
		{ "v0" : 201, "v1" : 202, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 203, "v1" : 204, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 205, "v1" : 206, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 207, "v1" : 208, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 209, "v1" : 210, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 211, "v1" : 212, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 213, "v1" : 214, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 215, "v1" : 216, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 217, "v1" : 218, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 219, "v1" : 220, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 95, "v1" : 182, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 95, "v1" : 180, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 5.1503946672979835 },
		{ "v0" : 95, "v1" : 180, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 50 },
		{ "v0" : 75, "v1" : 186, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : -63.384007741436164 },
		{ "v0" : 75, "v1" : 190, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : -58.93414564563431 },
		{ "v0" : 75, "v1" : 77, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : -63.67867690950191 },
		{ "v0" : 190, "v1" : 202, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 30.35408736274531 },
		{ "v0" : 190, "v1" : 204, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 38.71906519735212 },
		{ "v0" : 190, "v1" : 206, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 40.1697553109201 },
		{ "v0" : 190, "v1" : 208, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 190, "v1" : 210, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 190, "v1" : 212, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 58.83648077641912 },
		{ "v0" : 190, "v1" : 214, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 190, "v1" : 216, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" },
		{ "v0" : 190, "v1" : 218, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : 66.76949146697507 },
		{ "v0" : 190, "v1" : 220, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8", "curve" : -15.362643708078915 },
		{ "v0" : 186, "v1" : 76, "bCoef" : 0.1, "cMask" : [ ], "color" : "B6B6B8" }

	],

	"planes" : [
		{ "normal" : [0,1 ], "dist" : -350, "bCoef" : 0.1 },
		{ "normal" : [-1,0 ], "dist" : -770, "bCoef" : 0.1, "_selected" : true },
		{ "normal" : [0,-1 ], "dist" : -320, "cMask" : ["ball" ] },
		{ "normal" : [0,-1 ], "dist" : -350, "bCoef" : 0.1 },
		{ "normal" : [1,0 ], "dist" : -770, "bCoef" : 0.1 },
		{ "normal" : [0,1 ], "dist" : -320, "cMask" : ["ball" ] }

	],

	"goals" : [
		{ "p0" : [-706.25,-85 ], "p1" : [-706.25,85 ], "team" : "red" },
		{ "p0" : [706.25,-85 ], "p1" : [706.25,85 ], "team" : "blue" }

	],

	"discs" : [
		{ "pos" : [0,0 ], "radius" : 6.25, "bCoef" : 0.4, "invMass" : 1.5, "cGroup" : ["ball","kick","score" ], "color" : "FFCC00" },
		{ "pos" : [-700,-85 ], "radius" : 5.5, "invMass" : 0, "color" : "FF0000" },
		{ "pos" : [-700,85 ], "radius" : 5.5, "invMass" : 0, "color" : "FF0000" },
		{ "pos" : [700,-85 ], "radius" : 5.5, "invMass" : 0, "color" : "0022FD" },
		{ "pos" : [700,85 ], "radius" : 5.5, "invMass" : 0, "color" : "0022FD" },
		{ "pos" : [-700,320 ], "radius" : 3, "bCoef" : 0.1, "invMass" : 0, "color" : "FFCC00", "cMask" : [ ] },
		{ "pos" : [-700,-320 ], "radius" : 3, "bCoef" : 0.1, "invMass" : 0, "color" : "FFCC00", "cMask" : [ ] },
		{ "pos" : [700,-320 ], "radius" : 3, "bCoef" : 0.1, "invMass" : 0, "color" : "FFCC00", "cMask" : [ ] },
		{ "pos" : [700,320 ], "radius" : 3, "bCoef" : 0.1, "invMass" : 0, "color" : "FFCC00", "cMask" : [ ] }

	],

	"playerPhysics" : {
		"bCoef" : 0.1,
		"acceleration" : 0.11,
		"kickingAcceleration" : 0.083

	},

	"ballPhysics" : "disc0",

	"traits" : {
		

	}
}`;

/* OPTIONS */
const afkLimit = 12;
const drawTimeLimit = Infinity;
const maxTeamSize = 4;
let slowMode = 0;

/* PLAYERS */
const Team = { SPECTATORS: 0, RED: 1, BLUE: 2 };
const extendedP = [];
// Player Object ID, AUTH, CONNECTION, AFK STATUS, ACTIVITY, GOALKEEPER, MUTE
const eP = { ID: 0, AUTH: 1, CONN: 2, AFK: 3, ACT: 4, GK: 5, MUTE: 6};
// Stats: "Auth" : '["0-Games", "1-Wins", "2-Draws", "3-Losses", "4-Winrate", "5-Goals", "6-Assists", "7-GK", "8-CS", "9-CS%", "10- ELO", "11-Role", "12-Nick", "13-Emoji", "14-Color", "15-MSG"]'
const Ss = { GA: 0, WI: 1, DR: 2, LS: 3, WR: 4, GL: 5, AS: 6, GK: 7, CS: 8, CP: 9, ELO: 10, RL: 11, NK: 12, EMOJI: 13, COLOR: 14, MSG: 15};
let players;
let teamR;
let teamB;
let teamS;

/* GAME */

let lastTeamTouched; // helps track Goals
let lastPlayersTouched; // helps track Goals
let countAFK = false; // Helps track Activity
let activePlay = false; // helps track ball Posession
let goldenGoal = false;
const SMSet = new Set(); // Slowmode
let banList = []; // helps track bans

/* STATS */

let game;
let GKList = ["", ""];
let Rposs = 0;
let Bposs = 0;
const point = [{"x": 0, "y": 0}, {"x": 0, "y": 0}]; // created to get ball speed
let ballSpeed;
let lastWinner = Team.SPECTATORS;
let streak = 0;
let allBlues = []; // This is to count the players who should be counted for the stats. This includes players who left after the game has started, doesn't include those who came too late or ...
let allReds = []; // ... those who came in a very unequal game.

/* BALANCE & CHOOSE */

let inChooseMode = false; // This variable enables to distinguish the 2 phases of playing and choosing which should be dealt with very differently
let redCaptainChoice = "";
let blueCaptainChoice = "";
const chooseTime = 20;
let timeOutCap;

/* AUXILIARY */

let checkTimeVariable = false; // This is created so the chat doesn't get spammed when a game is ending via timeLimit
let statNumber = 0; // This allows the room to be given stat information every X minutes
let endGameVariable = false; // This variable with the one below helps distinguish the cases where games are stopped because they have finished to the ones where games are stopped due to player movements or resetting teams
let resettingTeams = false;
let capLeft = false;
const statInterval = 6;

loadMap(aloneMap, 0, 0);

/* OBJECTS */

function Goal(time, team, striker, assist) {
	this.time = time;
	this.team = team;
	this.striker = striker;
	this.assist = assist;
}

function Game(date, scores, goals) {
	this.date = date;
	this.scores = scores;
	this.goals = goals;
}

/* FUNCTIONS */

/* AUXILIARY FUNCTIONS */



/**
 * The getRandomInt function generates a random integer between 0 and the specified maximum value.
 * @param max - The maximum value that the random integer can be.
 * @returns a random integer between 0 (inclusive) and the specified maximum value (exclusive).
 */
function getRandomInt(max) {
	return Math.floor(Math.random() * Math.floor(max));
}


/**
 * The getTime function returns the current time of the game in the format [MM:SS].
 * @param scores - The parameter "scores" is an object that contains information about the game,
 * including the current time.
 * @returns a string representing the current time of the game in the format "[MM:SS]".
 */
function getTime(scores) {
	return "[" + Math.floor(Math.floor(scores.time/60)/10).toString() + Math.floor(Math.floor(scores.time/60)%10).toString() + ":" + Math.floor(Math.floor(scores.time - (Math.floor(scores.time/60) * 60))/10).toString() + Math.floor(Math.floor(scores.time - (Math.floor(scores.time/60) * 60))%10).toString() + "]"
}


/**
 * The function calculates the distance between two points in a two-dimensional space.
 * @param p1 - The parameter p1 represents the first point, which is an object with properties x and y
 * representing the coordinates of the point.
 * @param p2 - The above code defines a function called `pointDistance` that calculates the distance
 * between two points in a two-dimensional space.
 * @returns the distance between two points, calculated using the Pythagorean theorem.
 */
function pointDistance(p1, p2) {
	var d1 = p1.x - p2.x;
	var d2 = p1.y - p2.y;
	return Math.sqrt(d1 * d1 + d2 * d2);
}


/* BUTTONS */

/**
 * Top button that choose the player that is first in the queue.
 * @returns nothing if the condition `teamS.length == 0` is true. Otherwise, it is returning the result
 * of the team assignment operations.
 */
function topBtn() {
	if (teamS.length == 0) {
		return;
	}
	else {
		if (teamR.length == teamB.length) {
			if (teamS.length > 1) {
				room.setPlayerTeam(teamS[0].id, Team.RED);
				room.setPlayerTeam(teamS[1].id, Team.BLUE);
			}
			return;
		}
		else if (teamR.length < teamB.length) {
			room.setPlayerTeam(teamS[0].id, Team.RED);
		}
		else {
			room.setPlayerTeam(teamS[0].id, Team.BLUE);
		}
	}
}

/**
 * The function randomly assigns players to the red or blue team based on the current team sizes.
 * @returns nothing if the condition `teamS.length == 0` is true. Otherwise, it returns undefined.
 */
function randomBtn() {
	if (teamS.length == 0) {
		return;
	}
	else {
		if (teamR.length == teamB.length) {
			if (teamS.length > 1) {
				var r = getRandomInt(teamS.length);
				room.setPlayerTeam(teamS[r].id, Team.RED);
				teamS = teamS.filter((spec) => spec.id != teamS[r].id);
				room.setPlayerTeam(teamS[getRandomInt(teamS.length)].id, Team.BLUE);
			}
			return;
		}
		else if (teamR.length < teamB.length) {
			room.setPlayerTeam(teamS[getRandomInt(teamS.length)].id, Team.RED);
		}
		else {
			room.setPlayerTeam(teamS[getRandomInt(teamS.length)].id, Team.BLUE);
		}
	}
}

/**
 * The function "blueToSpecBtn" resets the teams in a game by moving all players from the blue team to
 * the spectators team.
 */
function blueToSpecBtn() {
	resettingTeams = true;
	setTimeout(() => { resettingTeams = false; }, 100);
	for (var i = 0; i < teamB.length; i++) {
		room.setPlayerTeam(teamB[teamB.length - 1 - i].id, Team.SPECTATORS);
	}
}

/**
 * The function "redToSpecBtn" resets the teams of all players in the "teamR" array to the spectator
 * team.
 */
function redToSpecBtn() {
	resettingTeams = true;
	setTimeout(() => { resettingTeams = false; }, 100);
	for (var i = 0; i < teamR.length; i++) {
		room.setPlayerTeam(teamR[teamR.length - 1 - i].id, Team.SPECTATORS);
	}
}

/**
 * The function `resetBtn` resets the teams in a game by moving players to the spectators team.
 */
function resetBtn() {
	resettingTeams = true;
	setTimeout(() => { resettingTeams = false; }, 100);
	if (teamR.length <= teamB.length) {
		for (var i = 0; i < teamR.length; i++) {
			room.setPlayerTeam(teamB[teamB.length - 1 - i].id, Team.SPECTATORS);
			room.setPlayerTeam(teamR[teamR.length - 1 - i].id, Team.SPECTATORS);
		}
		for (var i = teamR.length; i < teamB.length; i++) {
			room.setPlayerTeam(teamB[teamB.length - 1 - i].id, Team.SPECTATORS);
		}
	}
	else {
		for (var i = 0; i < teamB.length; i++) {
			room.setPlayerTeam(teamB[teamB.length - 1 - i].id, Team.SPECTATORS);
			room.setPlayerTeam(teamR[teamR.length - 1 - i].id, Team.SPECTATORS);
		}
		for (var i = teamB.length; i < teamR.length; i++) {
			room.setPlayerTeam(teamR[teamR.length - 1 - i].id, Team.SPECTATORS);
		}
	}
}


/**
 * The function changes the team of all players in teamB to the red team.
 */
function blueToRedBtn() {
	resettingTeams = true;
	setTimeout(() => { resettingTeams = false; }, 100);
	for (var i = 0; i < teamB.length; i++) {
		room.setPlayerTeam(teamB[i].id, Team.RED);
	}
}

/* GAME FUNCTIONS */

/* Setting the team colors for a game room. */
room.setTeamColors(Team.BLUE, 60, 0xFFFFFF, [0x0080ff, 0x0080ff, 0x0080ff]);
room.setTeamColors(Team.RED, 60, 0xFFFFFF, [0xFF4D40, 0xFF4D40, 0xFF4D40]);


/**
 * The function checks the time remaining in a game and performs certain actions based on the time and
 * game scores.
 */
function checkTime() {
	const scores = room.getScores();
	game.scores = scores;
	if (Math.abs(scores.time - scores.timeLimit) <= 0.01 && scores.timeLimit != 0) {
		if (scores.red != scores.blue) {
			if (checkTimeVariable == false) {
				checkTimeVariable = true;
				setTimeout(() => { checkTimeVariable = false; }, 3000);
				scores.red > scores.blue ? endGame(Team.RED) : endGame(Team.BLUE);
				setTimeout(() => { room.stopGame(); }, 2000);
			}
			return;
		}
		goldenGoal = true;
		room.sendAnnouncement("Gol gana! El que pierde es de la UNI.", null, 0x4ffaff, "bold", 1);
	}
	if (Math.abs(drawTimeLimit * 60 - scores.time - 60) <= 0.01 && players.length > 2) {
		if (checkTimeVariable == false) {
			checkTimeVariable = true;
			setTimeout(() => { checkTimeVariable = false; }, 10);
			room.sendAnnouncement(Bot + "⌛ Quedan 60 segundos para que termine el partido !", null, 0x4ffaff, "bold", 1);
		}
	}
	if (Math.abs(scores.time - drawTimeLimit * 60) <= 0.01 && players.length > 2) {
		if (checkTimeVariable == false) {
			checkTimeVariable = true;
			setTimeout(() => { checkTimeVariable = false; }, 10);
			endGame(Team.SPECTATORS);
			room.stopGame();
			goldenGoal = false;
		}
	}
}

/**
 * The function "endGame" handles the end of a game by updating scores, determining the winner,
 * announcing the result, and updating statistics.
 * @param winner - The `winner` parameter in the `endGame` function represents the team that won the
 * game. It can have one of the following values: Team.BLUE (blue team won), Team.RED (red team won).
 */
function endGame(winner) { // handles the end of a game
	players.length >= 2 * maxTeamSize - 1 ? activateChooseMode() : null;
	const scores = room.getScores();
	game.scores = scores;
	Rposs = Rposs/(Rposs+Bposs);
	Bposs = 1 - Rposs;
	lastWinner = winner;
	endGameVariable = true;
	if (winner == Team.RED) {
		streak++;
		room.sendAnnouncement(Bot + "🔴 El Red Team ganó " + scores.red + "-" + scores.blue + " ! Victorias consecutivas : " + streak + " 🏆", null, 0x4ffaff, "bold", 2);
	}
	else if (winner == Team.BLUE) {
		streak = 1;
		room.sendAnnouncement(Bot + "🔵 El Blue Team ganó " + scores.blue + "-" + scores.red + " ! Victorias consecutivas : " + streak + " 🏆", null, 0x4ffaff, "bold", 2);
	}
	else {
		streak = 0;
		room.sendAnnouncement(Bot +"💤 Límite de empate, terminado! 💤", null, 0x4ffaff, "bold", 2);
    }
    room.sendAnnouncement(Bot + "⭐ Posesión del balón : 🔴 " + (Rposs*100).toPrecision(3).toString() + "% : " + (Bposs*100).toPrecision(3).toString() + "% 🔵", null, 0x4ffaff, "bold", 2);
    scores.red == 0 ? (scores.blue == 0 ? room.sendAnnouncement(Bot + "🏆 " + GKList[0].name + " y " + GKList[1].name + " mantuvieron la valla invicta ! ") : room.sendAnnouncement(Bot + "🏆 " + GKList[1].name + " mantuvo la valla invicta ! ", null, 0x4ffaff, "bold", 2)) : scores.blue == 0 ? room.sendAnnouncement(Bot +"🏆 " + GKList[0].name + " mantuvo la valla invicta ! ", null, 0x4ffaff, "bold", 2) : null;
	updateStats();
}

/**
 * The function `quickRestart` stops the current game in a room and then starts a new game after a
 * 2-second delay.
 */
function quickRestart() {
	room.stopGame();
	setTimeout(() => { room.startGame(); }, 2000);
}


/**
 * The function resumeGame() starts a game after a delay of 2 seconds and then immediately unpauses the
 * game after a delay of 1 second.
 */
function resumeGame() {
	setTimeout(() => { room.startGame(); }, 2000);
	setTimeout(() => { room.pauseGame(false); }, 1000);
}

/**
 * The function activates the choose mode and sends an announcement message.
 */
function activateChooseMode() {
	inChooseMode = true;
	slowMode = 2;
	room.sendAnnouncement(Bot + "Reconfigurando juego!", null, 0x4ffaff, "bold", 1);
}

/**
 * The function "deactivateChooseMode" is used to deactivate the choose mode and reset the choice variables.
 */
function deactivateChooseMode() {
	inChooseMode = false;
	clearTimeout(timeOutCap);
	if (slowMode != 0) {
		slowMode = 0;
		room.sendAnnouncement(Bot + "Go ñofi!!!.", null, 0x4ffaff, "bold", 1);
	}
	redCaptainChoice = "";
	blueCaptainChoice = "";
}

/**
 * The function `loadMap` sets the custom stadium, score limit, and time limit for a game room based on
 * the provided parameters.
 * @param map - The "map" parameter is used to specify the stadium or map that will be loaded in the
 * game. It can be a custom stadium or one of the predefined stadiums such as "Classic" or "Big".
 * @param scoreLim - The `scoreLim` parameter is used to set the score limit for the game. It
 * determines how many points a team or player needs to reach in order to win the game.
 * @param timeLim - The `timeLim` parameter in the `loadMap` function represents the time limit for the
 * game. It specifies the maximum duration for a game session.
 */
function loadMap(map, scoreLim, timeLim) {
	if (map == aloneMap) {
		room.setCustomStadium(aloneMap);
	}
	else if (map == classicMap) {
		(classicMap != '') ? room.setCustomStadium(classicMap) : room.setDefaultStadium("Classic");
	}
	else if (map == bigMap) {
		(bigMap != '.') ? room.setCustomStadium(bigMap) : room.setDefaultStadium("Big");
	}
	else {
		room.setCustomStadium(map);
	}
	room.setScoreLimit(scoreLim);
	room.setTimeLimit(timeLim);
}

/* PLAYER FUNCTIONS */

/**
 * The function updates the players' list and separates them into different teams.
 */
function updateTeams() {
	players = room.getPlayerList().filter((player) => player.id != 0 && !getAFK(player));
	teamR = players.filter(p => p.team === Team.RED);
	teamB = players.filter(p => p.team === Team.BLUE);
	teamS = players.filter(p => p.team === Team.SPECTATORS);
}


/**
 * The function handles inactivity by incrementing the activity count for each player and kicking them
 * if they exceed the afkLimit.
 */
function handleInactivity() {
	if (countAFK && (teamR.length + teamB.length) > 1) {
		for (var i = 0; i < teamR.length ; i++) {
			setActivity(teamR[i], getActivity(teamR[i]) + 1);
		}
		for (var i = 0; i < teamB.length ; i++) {
			setActivity(teamB[i], getActivity(teamB[i]) + 1);
		}
	}
	for (var i = 0; i < extendedP.length ; i++) {
		if (extendedP[i][eP.ACT] == 60 * (2/3 * afkLimit)) {
			room.sendAnnouncement(Bot + "[ATH] ⛔ @" + room.getPlayer(extendedP[i][eP.ID]).name + ", si no te mueves o envías un mensaje dentro de los siguientes " + Math.floor(afkLimit / 3) + " segundos, seras kickeado!", extendedP[i][eP.ID], 0x4ffaff, "bold", 2);
		}
		if (extendedP[i][eP.ACT] >= 60 * afkLimit) {
			extendedP[i][eP.ACT] = 0;
            if (room.getScores().time <= afkLimit - 0.5) {
				setTimeout(() => { !inChooseMode ? quickRestart() : room.stopGame(); }, 10);
			}
			room.kickPlayer(extendedP[i][eP.ID], "AFK", false);
		}
	}
}

/**
 * The function "getAuth" returns the authentication value for a given player.
 * @param player - The "player" parameter is an object that represents a player.
 * @returns the value of the `eP.AUTH` property of the first element in the `extendedP` array that has
 * a matching `player.id` value. If no matching element is found, it returns `null`.
 */
function getAuth(player) {
	return extendedP.filter((a) => a[0] == player.id) != null ? extendedP.filter((a) => a[0] == player.id)[0][eP.AUTH] : null;
}

/**
 * The function "getAFK" returns the AFK status of a player.
 * @param player - The parameter "player" is an object that represents a player in a game.
 * @returns the AFK status of a player. If the player is found in the extendedP array, it will return
 * their AFK status. If the player is not found, it will return null.
 */
function getAFK(player) {
	return extendedP.filter((a) => a[0] == player.id) != null ? extendedP.filter((a) => a[0] == player.id)[0][eP.AFK] : null;
}

/**
 * The function sets the AFK (Away From Keyboard) status of a player.
 * @param player - The "player" parameter is an object that represents a player in a game. It likely
 * has properties such as "id" to identify the player and "AFK" to indicate whether the player is away
 * from the keyboard (AFK) or not.
 * @param value - The "value" parameter in the "setAFK" function is used to set the AFK (Away From
 * Keyboard) status of a player. It can be either true or false, indicating whether the player is AFK
 * or not.
 */
function setAFK(player, value) {
	extendedP.filter((a) => a[0] == player.id).forEach((player) => player[eP.AFK] = value);
}

function getActivity(player) {
	return extendedP.filter((a) => a[0] == player.id) != null ? extendedP.filter((a) => a[0] == player.id)[0][eP.ACT] : null;
}

function setActivity(player, value) {
	extendedP.filter((a) => a[0] == player.id).forEach((player) => player[eP.ACT] = value);
}

function getGK(player) {
	return extendedP.filter((a) => a[0] == player.id) != null ? extendedP.filter((a) => a[0] == player.id)[0][eP.GK] : null;
}

function setGK(player, value) {
	extendedP.filter((a) => a[0] == player.id).forEach((player) => player[eP.GK] = value);
}

function getMute(player) {
	return extendedP.filter((a) => a[0] == player.id) != null ? extendedP.filter((a) => a[0] == player.id)[0][eP.MUTE] : null;
}

function setMute(player, value) {
	extendedP.filter((a) => a[0] == player.id).forEach((player) => player[eP.MUTE] = value);
}

/* BALANCE & CHOOSE FUNCTIONS */

/**
 * The function updates the role of a player in a game and performs various actions related to team
 * balancing and map loading.
 */
function updateRoleOnPlayerIn() {
	updateTeams();
	if (inChooseMode) {
		if (players.length == 6) {
			loadMap(bigMap, scoreLimitBig, timeLimitBig);
		}
		getSpecList(teamR.length <= teamB.length ? teamR[0] : teamB[0]);
	}
	balanceTeams();
}

/**
 * The function `updateRoleOnPlayerOut` is responsible for updating the roles and teams of players in a
 * game, handling situations such as players leaving or joining teams, balancing teams, and ending the
 * game if there is an abandonment.
 */
function updateRoleOnPlayerOut() {
    updateTeams();
	if (room.getScores() != null) {
		var scores = room.getScores();
		if (players.length >= 2 * maxTeamSize && scores.time >= (5/6) * game.scores.timeLimit && teamR.length != teamB.length) {
			if (teamR.length < teamB.length) {
				if (scores.blue - scores.red == 2) {
					endGame(Team.BLUE);
					room.sendAnnouncement(Bot + "🤖 Abandono detectado. Juego terminado 🤖", null, 0x4ffaff, "bold", 2);
					setTimeout(() => { room.stopGame(); }, 100);
					return;
				}
			}
			else {
				if (scores.red - scores.blue == 2) {
					endGame(Team.RED);
					room.sendAnnouncement("🤖 Abandono detectado. Juego terminado 🤖", null, 0x4ffaff, "bold", 2);
					setTimeout(() => { room.stopGame(); }, 100);
					return;
				}
			}
		}
	}
	if (inChooseMode) {
		if (players.length == 5) {
			loadMap(classicMap, scoreLimitClassic, timeLimitClassic);
		}
		if (teamR.length == 0 || teamB.length == 0) {
			teamR.length == 0 ? room.setPlayerTeam(teamS[0].id, Team.RED) : room.setPlayerTeam(teamS[0].id, Team.BLUE);
			return;
		}
		if (Math.abs(teamR.length - teamB.length) == teamS.length) {
			room.sendAnnouncement("No hay alternativa, déjame manejar esta situación ...", null, 0x4ffaff, "bold", 2);
			deactivateChooseMode();
			resumeGame();
			var b = teamS.length;
			if (teamR.length > teamB.length) {
				for (var i = 0 ; i < b ; i++) {
					setTimeout(() => { room.setPlayerTeam(teamS[0].id, Team.BLUE); }, 5*i);
				}
			}
			else {
				for (var i = 0 ; i < b ; i++) {
					setTimeout(() => { room.setPlayerTeam(teamS[0].id, Team.RED); }, 5*i);
				}
			}
			return;
		}
		if (streak == 0 && room.getScores() == null) {
			if (Math.abs(teamR.length - teamB.length) == 2) { // if someone left a team has 2 more players than the other one, put the last chosen guy back in his place so it's fair
				room.sendAnnouncement(Bot + "🤖 Equilibrando equipos... 🤖", null, 0x4ffaff, "bold", 1);
				teamR.length > teamB.length ? room.setPlayerTeam(teamR[teamR.length - 1].id, Team.SPECTATORS) : room.setPlayerTeam(teamB[teamB.length - 1].id, Team.SPECTATORS);
			}
		}
		if (teamR.length == teamB.length && teamS.length < 2) {
			deactivateChooseMode();
			resumeGame();
			return;
		}
		capLeft ? choosePlayer() : getSpecList(teamR.length <= teamB.length ? teamR[0] : teamB[0]);
	}
	balanceTeams();
}

/**
 * The function "balanceTeams" is used to balance the teams in a game based on the number of players
 * and the current team sizes.
 */
function balanceTeams() {
	if (!inChooseMode) {
		if (players.length == 1 && teamR.length == 0) {
            quickRestart();
            loadMap(aloneMap, 0, 0);
			room.setPlayerTeam(players[0].id, Team.RED);
		}
		else if (Math.abs(teamR.length - teamB.length) == teamS.length && teamS.length > 0) {
			const n = Math.abs(teamR.length - teamB.length);
			if (players.length == 2) {
				quickRestart();
				loadMap(classicMap, scoreLimitClassic, timeLimitClassic);
			}
			if (teamR.length > teamB.length) {
				for (var i = 0 ; i < n ; i++) {
					room.setPlayerTeam(teamS[i].id, Team.BLUE);
				}
			}
			else {
				for (var i = 0 ; i < n ; i++) {
					room.setPlayerTeam(teamS[i].id, Team.RED);
				}
			}
		}
		else if (Math.abs(teamR.length - teamB.length) > teamS.length) {
			const n = Math.abs(teamR.length - teamB.length);
			if (players.length == 1) {
				quickRestart();
				loadMap(aloneMap, 0, 0);
				room.setPlayerTeam(players[0].id, Team.RED);
				return;
			}
			else if (players.length == 5) {
				quickRestart();
				loadMap(classicMap, scoreLimitClassic, timeLimitClassic);
			}
			if (players.length == maxTeamSize * 2 - 1) {
				allReds = [];
				allBlues = [];
			}
			if (teamR.length > teamB.length) {
				for (var i = 0 ; i < n ; i++) {
					room.setPlayerTeam(teamR[teamR.length - 1 - i].id, Team.SPECTATORS);
				}
			}
			else {
				for (var i = 0 ; i < n ; i++) {
					room.setPlayerTeam(teamB[teamB.length - 1 - i].id, Team.SPECTATORS);
				}
			}
		}
		else if (Math.abs(teamR.length - teamB.length) < teamS.length && teamR.length != teamB.length) {
			room.pauseGame(true);
			activateChooseMode();
			choosePlayer();
		}
		else if (teamS.length >= 2 && teamR.length == teamB.length && teamR.length < maxTeamSize) {
			if (teamR.length == 2) {
				quickRestart();
				loadMap(bigMap, scoreLimitBig, timeLimitBig);
			}
			topBtn();
		}
	}
}

/**
 * The function "choosePlayer" is used to select a player from a list based on their ID, top position,
 * random selection, or bottom position.
 */
function choosePlayer() {
	clearTimeout(timeOutCap);
	if (teamR.length <= teamB.length && teamR.length != 0) {
		room.sendAnnouncement(Bot +"[ATH] Para elegir un jugador, ingrese su número en la lista dada o use 'top', 'random' o 'bottom'.", teamR[0].id, 0x4ffaff, "bold", 2);
		timeOutCap = setTimeout(function (player) { room.sendAnnouncement("[ATH] Date prisa @" + player.name + ", solo quedan " + Number.parseInt(chooseTime / 2) + " segundos para elegir !", player.id); timeOutCap = setTimeout(function (player) { room.kickPlayer(player.id, "¡No elegiste a tiempo!", false); }, chooseTime * 500, teamR[0]); }, chooseTime * 1000, teamR[0], "bold", 1

		);
	}
	else if (teamB.length < teamR.length && teamB.length != 0) {
		room.sendAnnouncement(Bot + "[ATH] Para elegir un jugador, ingrese su número en la lista dada o use 'top', 'random' o 'bottom'.", teamB[0].id, 0x4ffaff, "bold", 2);
		timeOutCap = setTimeout(function (player) { room.sendAnnouncement(Bot + "[ATH] Date prisa @" + player.name + ", solo quedan " + Number.parseInt(chooseTime / 2) + " segundos para elegir !", player.id, 0x4ffaff, "bold", 2); timeOutCap = setTimeout(function (player) { room.kickPlayer(player.id, "¡No elegiste a tiempo!", false); }, chooseTime * 500, teamB[0]); }, chooseTime * 1000, teamB[0]);
	}
	if (teamR.length != 0 && teamB.length != 0) getSpecList(teamR.length <= teamB.length ? teamR[0] : teamB[0]);
}


/**
 * The function "getSpecList" sends a list of players in a team to a specific player.
 * @param player - The parameter "player" represents the player for whom the special list is being
 * generated.
 */
function getSpecList(player) {
	var cstm = "[ATH] Jugadores : ";
	for (var i = 0 ; i < teamS.length ; i++) {
		if (140 - cstm.length < (teamS[i].name + "[" + (i+1) + "], ").length) {
			room.sendAnnouncement(cstm, player.id, 0x4ffaff, "bold", 2);
			cstm = "... ";
		}
		cstm += teamS[i].name + "[" + (i+1) + "], ";
	}
	cstm = cstm.substring(0,cstm.length - 2);
	cstm += ".";
	room.sendAnnouncement(cstm, player.id, 0x4ffaff, "bold", 2);
}

/* STATS FUNCTIONS */

/**
 * The function getLastTouchOfTheBall checks which player from which team touched the ball last.
 */
function getLastTouchOfTheBall() {
	const ballPosition = room.getBallPosition();
	updateTeams();
	for (var i = 0; i < players.length; i++) {
		if (players[i].position != null) {
			var distanceToBall = pointDistance(players[i].position, ballPosition);
			if (distanceToBall < triggerDistance) {
				!activePlay ? activePlay = true : null;
				if (lastTeamTouched == players[i].team && lastPlayersTouched[0] != null && lastPlayersTouched[0].id != players[i].id) {
					lastPlayersTouched[1] = lastPlayersTouched[0];
					lastPlayersTouched[0] = players[i];
				}
				lastTeamTouched = players[i].team;
			}
		}
	}
}

/**
 * The function `getStats()` updates the possession, ball speed, and goalkeeper statistics for each
 * team during an active play.
 */
function getStats() {
	if (activePlay) {
		updateTeams();
		lastTeamTouched == Team.RED ? Rposs++ : Bposs++;
		var ballPosition = room.getBallPosition();
		point[1] = point[0];
		point[0] = ballPosition;
		ballSpeed = (pointDistance(point[0], point[1]) * 60 * 60 * 60)/15000;
		var k = [-1, Infinity];
		for (var i = 0; i < teamR.length; i++) {
			if (teamR[i].position.x < k[1]) {
				k[0] = teamR[i];
				k[1] = teamR[i].position.x;
			}
		}
		k[0] != -1 ? setGK(k[0], getGK(k[0]) + 1) : null;
		k = [-1, -Infinity];
		for (var i = 0; i < teamB.length; i++) {
			if (teamB[i].position.x > k[1]) {
				k[0] = teamB[i];
				k[1] = teamB[i].position.x;
			}
		}
		k[0] != -1 ? setGK(k[0], getGK(k[0]) + 1) : null;
		findGK();
	}
}



/**
 * The function "updateStats" updates the statistics of players in a game, including games played,
 * wins, losses, win rate, goals, assists, clean sheets, and Elo rating.
 */
function updateStats() {
	// Checks when game is over
	if (players.length >= 2 * maxTeamSize && (game.scores.time >= (5 / 6) * game.scores.timeLimit || game.scores.red == game.scores.scoreLimit || game.scores.blue == game.scores.scoreLimit) && allReds.length >= maxTeamSize && allBlues.length >= maxTeamSize) {
		var stats;
		// for all RED players
		for (var i = 0; i < allReds.length; i++) {
			// Get all the items in the JSON file
			// stats: [0] Games played, [1] Wins, [2] Losses, [3] Draws, [4] Winrate, [5] Goals, [6] Assists, [7] Clean sheets, [8] Saves, [9] Save rate, [10] Elo rating, [11] Player type, [12] Player name
			localStorage.getItem(getAuth(allReds[i])) ? stats = JSON.parse(localStorage.getItem(getAuth(allReds[i]))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", 0, "player", allReds[i].name, "", 0x000000, ""];
			// +1 in Games played
			stats[Ss.GA]++;
			// Which team won?
			lastWinner == Team.RED ? stats[Ss.WI]++ : lastWinner == Team.BLUE ? stats[Ss.LS]++ : stats[Ss.DR]++;
			// Winrrate recalculation
			stats[Ss.WR] = (100 * stats[Ss.WI] / stats[Ss.GA]).toPrecision(3);
			// Saves into Localstore JSON
			localStorage.setItem(getAuth(allReds[i]), JSON.stringify(stats));
		}
		// The same for Blue TEAM
		for (var i = 0; i < allBlues.length; i++) {
			localStorage.getItem(getAuth(allBlues[i])) ? stats = JSON.parse(localStorage.getItem(getAuth(allBlues[i]))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", 0, "player", allBlues[i].name, "", 0x000000, ""];
			stats[Ss.GA]++;
			lastWinner == Team.BLUE ? stats[Ss.WI]++ : lastWinner == Team.RED ? stats[Ss.LS]++ : stats[Ss.DR]++;
			stats[Ss.WR] = (100 * stats[Ss.WI] / stats[Ss.GA]).toPrecision(3);
			localStorage.setItem(getAuth(allBlues[i]), JSON.stringify(stats));
		}
        // Goals recalculation
		for (var i = 0; i < game.goals.length; i++) {
			if (game.goals[i].striker != null) {
				if ((allBlues.concat(allReds)).findIndex((player) => player.id == game.goals[i].striker.id) != -1) {
					stats = JSON.parse(localStorage.getItem(getAuth(game.goals[i].striker)));
					stats[Ss.GL]++;
					localStorage.setItem(getAuth(game.goals[i].striker), JSON.stringify(stats));
				}
			}
            // Assists recalculation
			if (game.goals[i].assist != null) {
				if ((allBlues.concat(allReds)).findIndex((player) => player.name == game.goals[i].assist.name) != -1) {
					stats = JSON.parse(localStorage.getItem(getAuth(game.goals[i].assist)));
					stats[Ss.AS]++;
					localStorage.setItem(getAuth(game.goals[i].assist), JSON.stringify(stats));
				}
			}
		}
        // GK recalculation
		if (allReds.findIndex((player) => player.id == GKList[0].id) != -1) {
			stats = JSON.parse(localStorage.getItem(getAuth(GKList[0])));
			stats[Ss.GK]++;
			game.scores.blue == 0 ? stats[Ss.CS]++ : null;
			stats[Ss.CP] = (100 * stats[Ss.CS] / stats[Ss.GK]).toPrecision(3);
			localStorage.setItem(getAuth(GKList[0]), JSON.stringify(stats));
		}
		if (allBlues.findIndex((player) => player.id == GKList[1].id) != -1) {
			stats = JSON.parse(localStorage.getItem(getAuth(GKList[1])));
			stats[Ss.GK]++;
			game.scores.red == 0 ? stats[Ss.CS]++ : null;
			stats[Ss.CP] = (100 * stats[Ss.CS] / stats[Ss.GK]).toPrecision(3);
			localStorage.setItem(getAuth(GKList[1]), JSON.stringify(stats));
		}
        // Elo recalculation for RED
        for (var i = 0; i < allReds.length; i++) {
			localStorage.getItem(getAuth(allReds[i])) ? stats = JSON.parse(localStorage.getItem(getAuth(allReds[i]))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", 0, "player", allReds[i].name, "", 0x000000, ""];
            stats[Ss.ELO] = (1000 + (stats[Ss.WI]*5)+(stats[Ss.LS]*-15)+(stats[Ss.GL]*15)+(stats[Ss.AS]*15)+(stats[Ss.CS]*20));
			localStorage.setItem(getAuth(allReds[i]), JSON.stringify(stats));
		}
		// Elo recalculation for BLUE
		for (var i = 0; i < allBlues.length; i++) {
			localStorage.getItem(getAuth(allBlues[i])) ? stats = JSON.parse(localStorage.getItem(getAuth(allBlues[i]))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", 0, "player", allBlues[i].name, "", 0x000000, ""];
            stats[Ss.ELO] = (1000 + (stats[Ss.WI]*5)+(stats[Ss.LS]*-15)+(stats[Ss.GL]*15)+(stats[Ss.AS]*15)+(stats[Ss.CS]*20));
			localStorage.setItem(getAuth(allBlues[i]), JSON.stringify(stats));
		}
	}
}


// Function to look for the GK :/
function findGK() {
	var tab = [[-1,""], [-1,""]];
	for (var i = 0; i < extendedP.length ; i++) {
		if (room.getPlayer(extendedP[i][eP.ID]) != null && room.getPlayer(extendedP[i][eP.ID]).team == Team.RED) {
			if (tab[0][0] < extendedP[i][eP.GK]) {
				tab[0][0] = extendedP[i][eP.GK];
				tab[0][1] = room.getPlayer(extendedP[i][eP.ID]);
			}
		}
		else if (room.getPlayer(extendedP[i][eP.ID]) != null && room.getPlayer(extendedP[i][eP.ID]).team == Team.BLUE) {
			if (tab[1][0] < extendedP[i][eP.GK]) {
				tab[1][0] = extendedP[i][eP.GK];
				tab[1][1] = room.getPlayer(extendedP[i][eP.ID]);
			}
		}
	}
	GKList = [tab[0][1], tab[1][1]];
}


setInterval(() => {
	var tableau = [];
	if (statNumber % 5 == 0) {
		Object.keys(localStorage).forEach(function (key) { if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) { tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.GA])]); } });
		if (tableau.length < 5) {
			return false;
		}
		tableau.sort(function (a, b) { return b[1] - a[1]; });
		room.sendAnnouncement(Bot + "Partidos Jugados> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], null, 0x4ffaff, "bold", 2);
	}
	if (statNumber % 5 == 1) {
		Object.keys(localStorage).forEach(function (key) { if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) { tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.WI])]); } });
		if (tableau.length < 5) {
			return false;
		}
		tableau.sort(function (a, b) { return b[1] - a[1]; });
		room.sendAnnouncement(Bot + "Victorias> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], null, 0x4ffaff, "bold", 2);
	}
	if (statNumber % 5 == 2) {
		Object.keys(localStorage).forEach(function (key) { if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) { tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.GL])]); } });
		if (tableau.length < 5) {
			return false;
		}
		tableau.sort(function (a, b) { return b[1] - a[1]; });
		room.sendAnnouncement(Bot +"Goles> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], null, 0x4ffaff, "bold", 2);
	}
	if (statNumber % 5 == 3) {
		Object.keys(localStorage).forEach(function (key) { if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) { tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.AS])]); } });
		if (tableau.length < 5) {
			return false;
		}
		tableau.sort(function (a, b) { return b[1] - a[1]; });
		room.sendAnnouncement(Bot + "Asistencias> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], null, 0x4ffaff, "bold", 2);
	}
	if (statNumber % 5 == 4) {
		Object.keys(localStorage).forEach(function (key) { if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) { tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.CS])]); } });
		if (tableau.length < 5) {
			return false;
		}
		tableau.sort(function (a, b) { return b[1] - a[1]; });
		room.sendAnnouncement("CS> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], null, 0x4ffaff, "bold", 2);
	}
	statNumber++;
}, statInterval * 60 * 1000);

/* EVENTS */

/* PLAYER MOVEMENT */

// Function that is triggered when a player joins
room.onPlayerJoin = function(player) {

	console.log(player.name + " : " + player.auth);
	extendedP.push([player.id, player.auth, player.conn, false, 0, 0, false]);

	updateRoleOnPlayerIn();


	if (localStorage.getItem(player.auth) != null) {
		if (JSON.parse(localStorage.getItem(player.auth))[Ss.RL] == "admin") {
			room.setPlayerAdmin(player.id, true);
		}
	}

	// Stats: "Auth" : '["0-Games", "1-Wins", "2-Draws", "3-Losses", "4-Winrate", "5-Goals", "6-Assists", "7-GK", "8-CS", "9-CS%", "10- ELO", "11-Role", "12-Nick", "13-Emoji", "14-Color", "15-MSG"]'
	localStorage.getItem(getAuth(player)) ? stats = JSON.parse(localStorage.getItem(getAuth(player))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", 0, "player", player.name, "", "", ""];

	if (stats[Ss.RL] === "admin")
	{
		// Default emoji and message when joining if Admin
		if (stats[Ss.MSG] === "" && stats[Ss.EMOJI] === "")
		{
			stats[Ss.MSG] = "El administrador " + player.name + " ha llegado";
			stats[Ss.EMOJI] = "👑";
			localStorage.setItem(getAuth(player), JSON.stringify(stats));
		}

		room.sendAnnouncement(stats[Ss.EMOJI] + " " + stats[Ss.MSG], null, 0x4ffaff, "bold", 2);
	}
	else
	{
		room.sendAnnouncement("[ATHBOT] 👋 Bienvenido UTECsino a [LPF(F)] " + player.name + " ! Escriba '!help' para ver los comandos.", "bold", 1);
		room.sendAnnouncement(Bot + "Pon !reglas x si hay alguna queja ", player.id, 0x6FE35D, "bold", 1);
	}
}

// Function that is triggered when a player change teams
room.onPlayerTeamChange = function(changedPlayer, byPlayer) {
	if (changedPlayer.id == 0) {
		room.setPlayerTeam(0, Team.SPECTATORS);
		return;
	}
	if (getAFK(changedPlayer) && changedPlayer.team != Team.SPECTATORS) {
		room.setPlayerTeam(changedPlayer.id, Team.SPECTATORS);
		room.sendAnnouncement(Bot + changedPlayer.name + " Se fue a jatear!", null, 0xA1CDFF, "bold", 1);
		return;
	}
	updateTeams();
	if (room.getScores() != null) {
		var scores = room.getScores();
		if (changedPlayer.team != Team.SPECTATORS && scores.time <= (3/4) * scores.timeLimit  && Math.abs(scores.blue - scores.red) < 2) {
			(changedPlayer.team == Team.RED) ? allReds.push(changedPlayer) : allBlues.push(changedPlayer);
		}
	}
	if (changedPlayer.team == Team.SPECTATORS) {
		setActivity(changedPlayer, 0);
	}
	if (inChooseMode && resettingTeams == false && byPlayer.id == 0) {
		if (Math.abs(teamR.length - teamB.length) == teamS.length) {
			deactivateChooseMode();
			resumeGame();
			var b = teamS.length;
			if (teamR.length > teamB.length) {
				for (var i = 0 ; i < b ; i++) {
					setTimeout(() => { room.setPlayerTeam(teamS[0].id, Team.BLUE); }, 200*i);
				}
			}
			else {
				for (var i = 0 ; i < b ; i++) {
					setTimeout(() => { room.setPlayerTeam(teamS[0].id, Team.RED); }, 200*i);
				}
			}
			return;
		}
		else if ((teamR.length == maxTeamSize && teamB.length == maxTeamSize) || (teamR.length == teamB.length && teamS.length < 2)) {
			deactivateChooseMode();
			resumeGame();
		}
		else if (teamR.length <= teamB.length && redCaptainChoice != "") { // choice remembered
			redCaptainChoice == "top" ? room.setPlayerTeam(teamS[0].id, Team.RED) : redCaptainChoice == "random" ? room.setPlayerTeam(teamS[getRandomInt(teamS.length)].id, Team.RED) : room.setPlayerTeam(teamS[teamS.length - 1].id, Team.RED);
			return;
		}
		else if (teamB.length < teamR.length && blueCaptainChoice != "") {
			blueCaptainChoice == "top" ? room.setPlayerTeam(teamS[0].id, Team.BLUE) : blueCaptainChoice == "random" ? room.setPlayerTeam(teamS[getRandomInt(teamS.length)].id, Team.BLUE) : room.setPlayerTeam(teamS[teamS.length - 1].id, Team.BLUE);
			return;
		}
		else {
			choosePlayer();
		}
	}
}

// Function that is triggered when a player leaves
room.onPlayerLeave = function(player) {
	if (teamR.findIndex((red) => red.id == player.id) == 0 && inChooseMode && teamR.length <= teamB.length) {
		choosePlayer();
		capLeft = true; setTimeout(() => { capLeft = false; }, 10);
	}
	if (teamB.findIndex((blue) => blue.id == player.id) == 0 && inChooseMode && teamB.length < teamR.length) {
		choosePlayer();
		capLeft = true; setTimeout(() => { capLeft = false; }, 10);
	}
	setActivity(player, 0);
    updateRoleOnPlayerOut();
}

// Function that is triggered when a player is kicked
room.onPlayerKicked = function(kickedPlayer, reason, ban, byPlayer) {
	ban == true ? banList.push([kickedPlayer.name, kickedPlayer.id]) : null;
}

// Function that is triggered when a player chats
room.onPlayerChat = function (player, message) {

	console.log("Nombre " + player.name + " : " + message);

	if (message.startsWith("t "))
	{
	room.getPlayerList().filter(callback => callback.team == player.team).forEach(callback => {room.sendAnnouncement("[Chat de equipo] < " + player.name + ": " + message.substr(2)/*`[Chat de equipo] > [${player.id}] ${player.name}: ${message.substr(prefixTeamChatString.length)}`*/, callback.id, player.team == 1 ? 0xFF7438 : player.team == 0 ? 0xABFFB6 : 0x2C6AC7, "bold", 1)})

	return false;
	}

	else if (message.startsWith("!say ") && player.admin == true)
	{
		room.sendAnnouncement(Bot + message.substr(5), null, 0xffde2e, "bold", 1);
		return false;
	}
	message = message.split(/ +/);

	player.team != Team.SPECTATORS ? setActivity(player, 0) : null;

	if (["!help"].includes(message[0].toLowerCase()))
	{
		room.sendAnnouncement("[ATH] Comandos : !mostrarstats, t [chat para team], !camisetahelp, !reglas", player.id, 0x4ffaff, "bold", 2);
		player.admin ? room.sendAnnouncement(Bot + " : [Admin] !mute <duration = 3> #<id>, !unmute all/#<id>, !clearbans <number = all>, !slow <duration>, !endslow", player.id, 0x4ffaff, "bold", 2) : null;
				player.admin ? room.sendAnnouncement(Bot + " : [Admin] | !color <htmlcolor> | !message <message> | !emoji <emoji>", player.id, 0x4ffaff, "bold", 2) : null;
	}

    else if (message == "!elo")
    {
        var stats;
		localStorage.getItem(getAuth(player)) ? stats = JSON.parse(localStorage.getItem(getAuth(player))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", 0, "player", player.name, "", "", ""]
		room.sendAnnouncement("[" + player.name + "] ELO: " + stats[Ss.ELO], null, 0x4ffaff, "bold", 1);
	}

    else if (["!leaderboard", "tabla"].includes(message[0].toLowerCase()))
    {
        var top10Array = [];
		let limit = 10;
        for (let key in localStorage) {

			if (key.length > 15)
			{
			// Stats: "Auth" : '["0-Games", "1-Wins", "2-Draws", "3-Losses", "4-Winrate", "5-Goals", "6-Assists", "7-GK", "8-CS", "9-CS%", "10- ELO", "11-Role", "12-Nick", "13-Emoji", "14-Color", "15-MSG"]'
			localStorage.getItem(key) ? stats = JSON.parse(localStorage.getItem(key)) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", 0, "player", player.name, "", "", ""]
            top10Array.push({ name: stats[12], elo: stats[10] });
			}
		}
        // Create items array
  		top10Array.sort((a, b) => b.elo - a.elo);

        room.sendAnnouncement("-------------LOS 10 MAS GRANDES DE HAXBALL-------------", player.id, 0xffcd48, "bold", 2);

		if (message.length > 1) {limit = parseInt(message[1]);}

        for (var i = 0; i < Math.min(top10Array.length, limit); i++)
        {
            room.sendAnnouncement(i+1 + ". " + top10Array[i].name + " -> " + top10Array[i].elo + " puntos", player.id, 0xffcd48, "bold", 2);
        }
	}

	else if (message == "!Reglas" || message == "!reglas"){
        // Example of rules lol
		room.sendAnnouncement("1.------------------------------------Amaras a la UTEC sobre todas las cosas---------------------------------------", player.id, 0xffcd48, "bold", 2);
		room.sendAnnouncement("2.----------------------------No tomaras el nombre o cuenta de alguien en vano----------------------------", player.id, 0xffcd48, "bold", 2);
		room.sendAnnouncement("3.-----------------------------------------------Santificaras a los admins--------------------------------------------------", player.id, 0xffcd48, "bold", 2);
		room.sendAnnouncement("4.------------------------------------------------Honraras a Atheros FC ----------------------------------------------------", player.id, 0xffcd48, "bold", 2);
		room.sendAnnouncement("5.--------------------------------------------------------NO simearas-----------------------------------------------------------", player.id, 0xffcd48, "bold", 2);
		room.sendAnnouncement("6.--------------------------------------------NO rejoinearas para tapar gol.--------------------------------------------", player.id, 0xffcd48, "bold", 2);
		room.sendAnnouncement("7.------------------------------------------NO caeras ante la excusa del lag-------------------------------------------", player.id, 0xffcd48, "bold", 2);
		room.sendAnnouncement("8.---------------------------------------------------------NO mentiras----------------------------------------------------------", player.id, 0xffcd48, "bold", 2);
		room.sendAnnouncement("9.------------NO consentiras pensamientos ni deseos impuros (irte a LPF cuando abre)----------", player.id, 0xffcd48, "bold", 2);
		room.sendAnnouncement("10.-----------------------------------------------NO codiciaras el WR ajeno----------------------------------------------", player.id, 0xffcd48, "bold", 2);
	}
	else if (["!afk"].includes(message[0].toLowerCase())) {
		if (players.length != 1 && player.team != Team.SPECTATORS) {
			if (player.team == Team.RED && streak > 0 && room.getScores() == null) {
				room.setPlayerTeam(player.id, Team.SPECTATORS);
			}
			else {
				room.sendAnnouncement(Bot + "No puedes ser AFK mientras estás en un equipo !", player.id, 0x8AFFF7, "bold", 1);
				return false;
			}
		}
		else if (players.length == 1 && !getAFK(player)) {
			room.setPlayerTeam(player.id, Team.SPECTATORS);
		}
		setAFK(player, !getAFK(player));
        // AFK message when command activated lol
		room.sendAnnouncement(player.name + (getAFK(player) ? " se ha ido a cagar!" : " ha vuelto de limpiarse el poto !"), null, (getAFK(player) ? 0xFFE063 : 0xFFE063), "normal", 1);
		/*room.sendAnnouncement(player.name + (getAFK(player) ? " Se ha ido a cagar!" : " Ha vuelto de limpiarse el poto !"), null, 0xFFE063, "bold", 2);*/
		getAFK(player) ? updateRoleOnPlayerOut() : updateRoleOnPlayerIn();
	}
	else if (["!afks", "!afklist"].includes(message[0].toLowerCase())) {
		var cstm = "[ATH] Lista de AFK : ";
		for (var i = 0; i < extendedP.length; i++) {
			if (room.getPlayer(extendedP[i][eP.ID]) != null && getAFK(room.getPlayer(extendedP[i][eP.ID]))) {
				if (140 - cstm.length < (room.getPlayer(extendedP[i][eP.ID]).name + ", ").length) {
					room.sendAnnouncement(cstm, player.id, 0x30FF91, "bold", 2);
					cstm = "... ";
				}
				cstm += room.getPlayer(extendedP[i][eP.ID]).name + ", ";
			}
		}
		if (cstm == "[ATH] Lista de AFK : ") {
			room.sendAnnouncement(Bot + "[ATH] No hay nadie en la lista de AFK !", player.id, 0x30FF91, "bold", 2);
			return false;
		}
		cstm = cstm.substring(0, cstm.length - 2);
		cstm += ".";
		room.sendAnnouncement(Bot + cstm, player.id, 0x8AFFF7, "bold", 2);
	}
	else if (["!mostrarstats"].includes(message[0].toLowerCase())) {

		var stats;
		localStorage.getItem(getAuth(player)) ? stats = JSON.parse(localStorage.getItem(getAuth(player))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", 0, "player", player.name, "", "", ""];
		room.sendAnnouncement("[" + player.name + "] PJ: " + stats[Ss.GA] + ", Victorias: " + stats[Ss.WI] + ", Derrotas: " + stats[Ss.LS] + ", WR: " + stats[Ss.WR] + "%, Goles: " + stats[Ss.GL] + ", Asistencias: " + stats[Ss.AS] + ", GK: " + stats[Ss.GK] + ", CS: " + stats[Ss.CS] + ", CS%: " + stats[Ss.CP] + "%", null, 0x30FF91, "bold", 1);

	}

	// Entry admin message setting
	else if ((["!message"].includes(message[0].toLowerCase())) && player.admin)  {

		var stats;
		localStorage.getItem(getAuth(player)) ? stats = JSON.parse(localStorage.getItem(getAuth(player))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", 0, "player", player.name, "", "", ""];

		const remainingWords = message.slice(1).join(" ");

		stats[Ss.MSG] = remainingWords;
		localStorage.setItem(getAuth(player), JSON.stringify(stats));
		room.sendAnnouncement(Bot + "Bienvenida de jugador cambiada exitosamente a [ " + remainingWords + " ]", player.id, 0x6FE35D, "bold", 1);

	}

	// Entry admin emoji setting
	else if ((["!emoji"].includes(message[0].toLowerCase())) && player.admin)  {

		if (message.length > 0)
		{

		var stats;
		localStorage.getItem(getAuth(player)) ? stats = JSON.parse(localStorage.getItem(getAuth(player))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", 0, "player", player.name, "", "", ""];
		stats[Ss.EMOJI] = message[1];
		localStorage.setItem(getAuth(player), JSON.stringify(stats));
		room.sendAnnouncement(Bot + "Emoji del jugador cambiado exitosamente a a [ " + message[1] + " ]", player.id, 0x6FE35D, "bold", 1);
		}
	}

	else if ((["!color"].includes(message[0].toLowerCase())) && player.admin)  {

		if (message.length > 0)
		{
		var stats;
		localStorage.getItem(getAuth(player)) ? stats = JSON.parse(localStorage.getItem(getAuth(player))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", 0, "player", player.name, "", "", ""];
		stats[Ss.COLOR] = message[1];
		localStorage.setItem(getAuth(player), JSON.stringify(stats));
		room.sendAnnouncement(Bot + "Emoji del jugador cambiado exitosamente a a [ " + message[1] + " ]", player.id, 0x6FE35D, "bold", 1);
		}
	}

	else if (["!partidas"].includes(message[0].toLowerCase()))
	{
		var tableau = [];
		Object.keys(localStorage).forEach(function (key) { if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) { tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.GA])]); } });
		if (tableau.length < 5)
		{
			room.sendAnnouncement(Bot +"[ATH] Aún no se han jugado partidos suficientes.", player.id, 0x8AFFF7, "bold",2);
			return false;
		}
		tableau.sort(function (a, b) { return b[1] - a[1]; });
		room.sendAnnouncement(Bot + "[ATH] Partidos Jugados> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], player.id, 0x8AFFF7, "bold", 2);
	}
	else if (["!victorias"].includes(message[0].toLowerCase())) {
		var tableau = [];
		Object.keys(localStorage).forEach(function (key) { if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) { tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.WI])]); } });
		if (tableau.length < 5) {
			room.sendAnnouncement(Bot +"[ATH] Aún no se han jugado partidos suficientes.", player.id, 0x8AFFF7, "bold", 2);
			return false;
		}
		tableau.sort(function (a, b) { return b[1] - a[1]; });
		room.sendAnnouncement(Bot + "[ATH] Victorias> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], player.id, 0x4ffaff, "bold", 2);
	}
	else if (["!goles"].includes(message[0].toLowerCase())) {
		var tableau = [];
		Object.keys(localStorage).forEach(function (key) { if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) { tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.GL])]); } });
		if (tableau.length < 5) {
			room.sendAnnouncement(Bot +"[ATH] Aún no se han jugado partidos suficientes.", player.id, 0x8AFFF7, "bold", 2);
			return false;
		}
		tableau.sort(function (a, b) { return b[1] - a[1]; });
		room.sendAnnouncement(Bot +"[ATH] Goles> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], player.id, 0x4ffaff, "bold", 2);
	}
	else if (["!asistencias"].includes(message[0].toLowerCase())) {
		var tableau = [];
		Object.keys(localStorage).forEach(function (key) { if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) { tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.AS])]); } });
		if (tableau.length < 5) {
			room.sendAnnouncement(Bot + "[ATH] Aún no se han jugado partidos suficientes.", player.id, 0x8AFFF7, "bold", 2);
			return false;
		}
		tableau.sort(function (a, b) { return b[1] - a[1]; });
		room.sendAnnouncement(Bot + "[ATH] Asistencias> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], player.id, 0x4ffaff, "bold", 2);
	}
	else if (["!cs"].includes(message[0].toLowerCase())) {
		var tableau = [];
		Object.keys(localStorage).forEach(function (key) { if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) { tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.CS])]); } });
		if (tableau.length < 5) {
			room.sendAnnouncement(Bot + "[ATH] Aún no se han jugado partidos suficientes.", player.id, 0x4ffaff, "bold", 2);
			return false;
		}
		tableau.sort(function (a, b) { return b[1] - a[1]; });
		room.sendAnnouncement(Bot + "[ATH] Vallas Invictas> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], player.id, 0x8AFFF7, "bold", 2);
	}
	else if (["!claim"].includes(message[0].toLowerCase())) {

		console.log("claimsito");
		if (message[1] == adminPassword) {
			room.setPlayerAdmin(player.id, true);
			var stats;
			localStorage.getItem(getAuth(player)) ? stats = JSON.parse(localStorage.getItem(getAuth(player))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", 0, "player", player.name, "", "", ""];
			if (stats[Ss.RL] != "admin") {
				stats[Ss.RL] = "admin";
				room.sendAnnouncement(Bot + player.name + " Ahora es alumno de la UTEC !", null, 0x8AFFF7, "bold", 2);
				localStorage.setItem(getAuth(player), JSON.stringify(stats));
			}
		}
	}
	else if (["!setadmin", "!admin"].includes(message[0].toLowerCase())) {
		if (localStorage.getItem(getAuth(player)) && JSON.parse(localStorage.getItem(getAuth(player)))[Ss.RL] == "admin") {
			if (message.length >= 2 && message[1][0] == "#") {
				message[1] = message[1].substring(1, message[1].length);
				if (!Number.isNaN(Number.parseInt(message[1])) && room.getPlayer(Number.parseInt(message[1])) != null) {
					var stats;
					localStorage.getItem(getAuth(room.getPlayer(Number.parseInt(message[1])))) ? stats = JSON.parse(localStorage.getItem(getAuth(room.getPlayer(Number.parseInt(message[1]))))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", 0, "player", room.getPlayer(Number.parseInt(message[1])).name, "", 0x000000, ""];
					if (stats[Ss.RL] == "player") {
						stats[Ss.RL] = "admin";
						localStorage.setItem(getAuth(room.getPlayer(Number.parseInt(message[1]))), JSON.stringify(stats));
						room.setPlayerAdmin(room.getPlayer(Number.parseInt(message[1])).id, true);
						room.sendAnnouncement(Bot + room.getPlayer(Number.parseInt(message[1])).name + " Ahora es alumno de la UTEC !", null, 0x8AFFF7, "bold", 2);
					}
				}
			}
		}
	}
	else if (["!setplayer", "!removeadmin"].includes(message[0].toLowerCase())) {
		if (localStorage.getItem(getAuth(player)) && JSON.parse(localStorage.getItem(getAuth(player)))[Ss.RL] == "admin") {
			if (message.length >= 2 && message[1][0] == "#") {
				message[1] = message[1].substring(1, message[1].length);
				if (!Number.isNaN(Number.parseInt(message[1])) && room.getPlayer(Number.parseInt(message[1])) != null) {
					var stats;
					localStorage.getItem(getAuth(room.getPlayer(Number.parseInt(message[1])))) ? stats = JSON.parse(localStorage.getItem(getAuth(room.getPlayer(Number.parseInt(message[1]))))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", 0, "player", room.getPlayer(Number.parseInt(message[1])).name, "", 0x000000, ""];
					if (stats[Ss.RL] == "admin") {
						room.sendAnnouncement(Bot + room.getPlayer(Number.parseInt(message[1])).name + " Ya no es alumno de la UTEC !", null, 0x8AFFF7, "bold", 2);
						stats[Ss.RL] = "player";
						localStorage.setItem(getAuth(room.getPlayer(Number.parseInt(message[1]))), JSON.stringify(stats));
						room.setPlayerAdmin(room.getPlayer(Number.parseInt(message[1])).id, false);
					}
				}
			}
		}
	}
	else if (["!mutes", "!mutelist"].includes(message[0].toLowerCase())) {
		var cstm = "[ATH] Lista de muteados : ";
		for (var i = 0; i < extendedP.length; i++) {
			if (room.getPlayer(extendedP[i][eP.ID]) != null && getMute(room.getPlayer(extendedP[i][eP.ID]))) {
				if (140 - cstm.length < (room.getPlayer(extendedP[i][eP.ID]).name + "[" + (extendedP[i][eP.ID]) + "], ").length) {
					room.sendAnnouncement(Bot + cstm, player.id, 0x8AFFF7, "bold", 2);
					cstm = "... ";
				}
				cstm += room.getPlayer(extendedP[i][eP.ID]).name + "[" + (extendedP[i][eP.ID]) + "], ";
			}
		}
		if (cstm == "[ATH] Lista de Muteados : ") {
			room.sendAnnouncement(Bot + "[ATH] No hay nadie en la lista de muteados !", player.id, 0x8AFFF7, "bold", 2);
			return false;
		}
		cstm = cstm.substring(0, cstm.length - 2);
		cstm += ".";
		room.sendAnnouncement(cstm, player.id, 0x4ffaff, "bold", 2);
	}
	else if (["!mute"].includes(message[0].toLowerCase())) {
		if (player.admin) {
			updateTeams();
			var timeOut;
			if (!Number.isNaN(Number.parseInt(message[1])) && message.length > 1) {
				if (Number.parseInt(message[1]) > 0) {
					timeOut = Number.parseInt(message[1]) * 60 * 1000;
				}
				else {
					timeOut = 3 * 60 * 1000;
				}
				if (message[2].length > 1 && message[2][0] == "#") {
					message[2] = message[2].substring(1, message[2].length);
					if (!Number.isNaN(Number.parseInt(message[2])) && room.getPlayer(Number.parseInt(message[2])) != null) {
						if (room.getPlayer(Number.parseInt(message[2])).admin || getMute(room.getPlayer(Number.parseInt(message[2])))) {
							return false;
						}
						setTimeout(function (player) { setMute(player, false); }, timeOut, room.getPlayer(Number.parseInt(message[2])));
						setMute(room.getPlayer(Number.parseInt(message[2])), true);
						room.sendAnnouncement(Botroom.getPlayer(Number.parseInt(message[2])).name + " ha sido muteado por " + (timeOut / 60000) + " minutos !", "bold", 1);
					}
				}
			}
			else if (Number.isNaN(Number.parseInt(message[1]))) {
				if (message[1].length > 1 && message[1][0] == "#") {
					message[1] = message[1].substring(1, message[1].length);
					if (!Number.isNaN(Number.parseInt(message[1])) && room.getPlayer(Number.parseInt(message[1])) != null) {
						if (room.getPlayer(Number.parseInt(message[1])).admin || getMute(room.getPlayer(Number.parseInt(message[1])))) {
							return false;
						}
						setTimeout(function (player) { setMute(player, false); }, 3 * 60 * 1000, room.getPlayer(Number.parseInt(message[1])));
						setMute(room.getPlayer(Number.parseInt(message[1])), true);
						room.send(room.getPlayer(Number.parseInt(message[1])).name + " Te han muteado por 3 minutos!", "bold", 1);
					}
				}
			}
		}
	}
	else if (["!unmute"].includes(message[0].toLowerCase())) {
		if (player.admin && message.length >= 2) {
			if (message[1] == "all") {
				extendedP.forEach((ePlayer) => { ePlayer[eP.MUTE] = false; });
				room.sendAnnouncement(Bot + "Se ha limpiado la lista de muteados", null, 0x4ffaff, "bold", 2);
			}
			else if (!Number.isNaN(Number.parseInt(message[1])) && room.getPlayer(Number.parseInt(message[1])) != null && getMute(room.getPlayer(Number.parseInt(message[1])))) {
				setMute(room.getPlayer(Number.parseInt(message[1])), false);
				room.sendAnnouncement(Bot + room.getPlayer(Number.parseInt(message[1])).name + " ha sido desmuteado !", null, 0x96CBFF, "bold", 2);
			}
			else if (Number.isNaN(Number.parseInt(message[1]))) {
				if (message[1].length > 1 && message[1][0] == "#") {
					message[1] = message[1].substring(1, message[1].length);
					if (!Number.isNaN(Number.parseInt(message[1])) && room.getPlayer(Number.parseInt(message[1])) != null && getMute(room.getPlayer(Number.parseInt(message[1])))) {
						setMute(room.getPlayer(Number.parseInt(message[1])), false);
						room.sendAnnouncement(room.getPlayer(Number.parseInt(message[1])).name + " ha sido desmuteado!", "bold", 1);
					}
				}
			}
		}
	}
	else if (["!slow"].includes(message[0].toLowerCase())) {
		if (player.admin) {
			if (message.length == 1) {
				slowMode = 2;
				room.sendAnnouncement(" SLOWCHAT Activado, Esperar 2 segundos por mensaje!", "bold", 1);
			}
			else if (message.length == 2) {
				if (!Number.isNaN(Number.parseInt(message[1]))) {
					if (Number.parseInt(message[1]) > 0) {
						slowMode = Number.parseInt(message[1]);
						room.sendAnnouncement(slowMode + " segundos, SLOWCHAT Activado!!", "bold", 1);
						return false;
					}
				}
				slowMode = 2;
				room.sendAnnouncement("Esperen Mrd !! (2 segundos)!", "bold", 1);
			}
		}
	}
	else if (["!endslow"].includes(message[0].toLowerCase())) {
		if (player.admin) {
			slowMode != 0 ? room.sendAnnouncement("Ya tamo , Gooo .", "bold", 1) : null;
			slowMode = 0;
		}
	}
	else if (["!banlist", "!bans"].includes(message[0].toLowerCase())) {
		if (banList.length == 0) {
			room.sendAnnouncement("[ATH] No hay nadie en la lista de baneados!", player.id, "bold", 1);
			return false;
		}
		var cstm = "[ATH] Lista de baneados : ";
		for (var i = 0; i < banList.length; i++) {
			if (140 - cstm.length < (banList[i][0] + "[" + (banList[i][1]) + "], ").length) {
				room.sendAnnouncement(cstm, player.id);
				cstm = "... ";
			}
			cstm += banList[i][0] + "[" + (banList[i][1]) + "], ";
		}
		cstm = cstm.substring(0, cstm.length - 2);
		cstm += ".";
		room.sendAnnouncement(cstm, player.id);
	}
	else if (["!clearbans"].includes(message[0].toLowerCase())) {
		if (player.admin) {
			if (message.length == 1) {
				room.clearBans();
				room.sendAnnouncement("Bans removidos!");
				banList = [];
			}
			if (message.length == 2) {
				if (!Number.isNaN(Number.parseInt(message[1]))) {
					if (Number.parseInt(message[1]) > 0) {
						ID = Number.parseInt(message[1]);
						room.clearBan(ID);
						if (banList.length != banList.filter((array) => array[1] != ID)) {
							room.sendAnnouncement(banList.filter((array) => array[1] == ID)[0][0] + " ha sido baneado del host !");
						}
						setTimeout(() => { banList = banList.filter((array) => array[1] != ID); }, 20);
					}
				}
			}
		}
	}

	else if (["!bb", "!bye", "!cya", "!gn"].includes(message[0].toLowerCase())) {
		room.kickPlayer(player.id, "Nos vemos mrd !", false);
	}



    // Example command for creating soccer jerseys of "teams"
    // Must use hexadecimal colors for it, [0x'HEXCOLOR']
    // setTeamColors(team : TeamID, angle : float, textColor : int, colors : []int) : void

	else if (["!camiseta"].includes(message[0].toLowerCase()) && player.team != 0)
	{
		var correct = true;
		if (message[1].toLowerCase() == "aguilas")
		{
			if (player.team == 1) {room.setTeamColors(Team.RED, 0 , 0xFFFFFF , [0x6B0B6A , 0x6B0B6A , 0x000000]);}
			else{room.setTeamColors(Team.BLUE, 0, 0xFFFFFF , [0x6B0B6A , 0x6B0B6A , 0x000000]);}
		}

		else if (message[1].toLowerCase() == "abejitas")
		{
			if (player.team == 1) {room.setTeamColors(Team.RED, 125,0xFFFFFF, [0xFFDD00, 0x000000, 0xFFDD00]);}
			else{room.setTeamColors(Team.BLUE, 125 , 0xFFFFFF  , [0xFFDD00  , 0x000000  , 0xFFDD00]);}
		}
		else if (message[1].toLowerCase() == "borrachos")
		{
			if (player.team == 1) {room.setTeamColors(Team.RED, 60 ,0xFFFFFF , [0xE8C538 , 0xFFF569]);}
			else{room.setTeamColors(Team.BLUE, 60 ,0xFFFFFF , [0xE8C538 , 0xFFF569]);}
		}
		else if (message[1].toLowerCase() == "mishari")
		{
			if (player.team == 1) {room.setTeamColors(Team.RED, 55  ,0xFFFFFF  , [0xCC003D , 0x8A0D21  , 0xCC003D]);}
			else{room.setTeamColors(Team.BLUE, 55 , 0xFFFFFF  , [0xCC003D  , 0x8A0D21  , 0xCC003D]);}
		}
		else if (message[1].toLowerCase() == "expropiadores")
		{
			if (player.team == 1) {room.setTeamColors(Team.RED, 90 ,0xFFFFFF, [0x000000]);}
			else{room.setTeamColors(Team.BLUE, 90 ,0xFFFFFF, [0x000000]);}
		}
		else if (message[1].toLowerCase() == "liverpool")
		{
			if (player.team == 1) {room.setTeamColors(Team.RED, 0 ,0xFFFFFF , [0xCC0000, 0xCC0000, 0x8A0000]);}
			else{room.setTeamColors(Team.BLUE, 0 ,0xFFFFFF , [0xCC0000, 0xCC0000, 0x8A0000]);}
		}
		else if (message[1].toLowerCase() == "rechuchamboys")
		{
			if (player.team == 1) {room.setTeamColors(Team.RED, 90  ,0x000000 , [0xFFA203 , 0xFFA203 , 0x000000]);}
			else{room.setTeamColors(Team.BLUE, 90  ,0x000000 , [0xFFA203 , 0xFFA203 , 0x000000]);}
		}
		else if (message[1].toLowerCase() == "machos")
		{
			if (player.team == 1) {room.setTeamColors(Team.RED, 55   ,0x000000 , [0xC7180C  , 0xFAFAFA  , 0x961209]);}
			else{room.setTeamColors(Team.BLUE, 55   ,0x000000 , [0xC7180C  , 0xFAFAFA  , 0x961209]);}
		}
		else if (message[1].toLowerCase() == "psg")
		{
			if (player.team == 1) {room.setTeamColors(Team.RED, 0    ,0xFFFFFF  , [0x002A42 , 0xBD0000 , 0x002A42]);}
			else{room.setTeamColors(Team.BLUE, 0 ,0xFFFFFF  , [0x002A42 , 0xBD0000 , 0x002A42]);}
		}
		else if (message[1].toLowerCase() == "victoria")
		{
			if (player.team == 1) {room.setTeamColors(Team.RED, 0 ,0x000000  , [0xFF1717  , 0xFFFFFF  , 0xFF1717]);}
			else{room.setTeamColors(Team.BLUE, 0 ,0x000000  , [0xFF1717  , 0xFFFFFF  , 0xFF1717]);}
		}
		else if (message[1].toLowerCase() == "lorient")
		{
			if (player.team == 1) {room.setTeamColors(Team.RED, 60 ,0x000000  , [0x2AD600   , 0x21C200   , 0x11B000]);}
			else{room.setTeamColors(Team.BLUE, 60 ,0x000000 , [0x2AD600   , 0x21C200   , 0x11B000]);}
		}
		else if (message[1].toLowerCase() == "devils")
		{
			if (player.team == 1) {room.setTeamColors(Team.RED, 60  ,0xCCC125   , [0xED1000    , 0xC40D00    , 0xF7F7F0]);}
			else{room.setTeamColors(Team.BLUE, 60  ,0xCCC125   , [0xED1000    , 0xC40D00    , 0xF7F7F0]);}
		}
		else if (message[1].toLowerCase() == "callao")
		{
			if (player.team == 1) {room.setTeamColors(Team.RED, 60   ,0xF0D7D5    , [0xDE6E6A     , 0xBF4545     , 0xA82A2A]);}
			else{room.setTeamColors(Team.BLUE, 60   ,0xF0D7D5    , [0xDE6E6A     , 0xBF4545     , 0xA82A2A]);}
		}
		else
		{
			console.log("Bad actor");
			correct = false;
		}
		if (correct == true){
			room.sendAnnouncement(player.name + " cambio las camisetas del equipo a " + message[1], null, 0x4ffaff, "bold", 1);
		}


	}

	else if (["!camisetahelp"].includes(message[0].toLowerCase()))
	{
		room.sendAnnouncement("[ATH] !camiseta [Nombre Del Equipo] : aguilas, abejitas, borrachos, mishari, expropiadores, liverpool, rechuchamboys, machos, psg, victoria, lorient, devils, callao, atheros [ In progress ]", player.id, 0x4ffaff, "bold", 2);
	}


	if (teamR.length != 0 && teamB.length != 0 && inChooseMode) {
		if (player.id == teamR[0].id || player.id == teamB[0].id) { // we care if it's one of the captains choosing
			if (teamR.length <= teamB.length && player.id == teamR[0].id) { // we care if it's red turn && red cap talking
				if (["top", "auto"].includes(message[0].toLowerCase())) {
					room.setPlayerTeam(teamS[0].id, Team.RED);
					redCaptainChoice = "top";
					clearTimeout(timeOutCap);
					room.sendAnnouncement(player.name + " elegiste Top !");
					return false;
				}
				else if (["random", "rand"].includes(message[0].toLowerCase())) {
					var r = getRandomInt(teamS.length);
					room.setPlayerTeam(teamS[r].id, Team.RED);
					redCaptainChoice = "random";
					clearTimeout(timeOutCap);
					room.sendAnnouncement(player.name + " elegiste Random !");
					return false;
				}
				else if (["bottom", "bot"].includes(message[0].toLowerCase())) {
					room.setPlayerTeam(teamS[teamS.length - 1].id, Team.RED);
					redCaptainChoice = "bottom";
					clearTimeout(timeOutCap);
					room.sendAnnouncement(player.name + " elegiste Bottom !");
					return false;
				}
				else if (!Number.isNaN(Number.parseInt(message[0]))) {
					if (Number.parseInt(message[0]) > teamS.length || Number.parseInt(message[0]) < 1) {
						room.sendAnnouncement("[ATH] El número que elegiste es inválido !", player.id);
						return false;
					}
					else {
						room.setPlayerTeam(teamS[Number.parseInt(message[0]) - 1].id, Team.RED);
						room.sendAnnouncement(player.name + " eligió a " + teamS[Number.parseInt(message[0]) - 1].name + " !", 0x4ffaff, "bold", 1);
						return false;
					}
				}
			}
			if (teamR.length > teamB.length && player.id == teamB[0].id) { // we care if it's red turn && red cap talking
				if (["top", "auto"].includes(message[0].toLowerCase())) {
					room.setPlayerTeam(teamS[0].id, Team.BLUE);
					blueCaptainChoice = "top";
					clearTimeout(timeOutCap);
					room.sendAnnouncement(player.name + " seleccionó Top !");
					return false;
				}
				else if (["random", "rand"].includes(message[0].toLowerCase())) {
					room.setPlayerTeam(teamS[getRandomInt(teamS.length)].id, Team.BLUE);
					blueCaptainChoice = "random";
					clearTimeout(timeOutCap);
					room.sendAnnouncement(player.name + " seleccionó Random !");
					return false;
				}
				else if (["bottom", "bot"].includes(message[0].toLowerCase())) {
					room.setPlayerTeam(teamS[teamS.length - 1].id, Team.BLUE);
					blueCaptainChoice = "bottom";
					clearTimeout(timeOutCap);
					room.sendAnnouncement(player.name + " seleccionó Bottom !");
					return false;
				}
				else if (!Number.isNaN(Number.parseInt(message[0]))) {
					if (Number.parseInt(message[0]) > teamS.length || Number.parseInt(message[0]) < 1) {
						room.sendAnnouncement("[ATH] El número que elegiste es inválido !", player.id);
						return false;
					}
					else {
						room.setPlayerTeam(teamS[Number.parseInt(message[0]) - 1].id, Team.BLUE);
						room.sendAnnouncement(player.name + " eligió " + teamS[Number.parseInt(message[0]) - 1].name + " !", 0x4ffaff, "bold", 1);
						return false;
					}
				}
			}

		}

	}
	if (message[0][0] == "!") {
		return false;
	}
	if (getMute(player)) {
		room.sendAnnouncement("Usted está muteado.", player.id);
		return false;
	}

	if (slowMode > 0) {
		if (!player.admin) {
			if (!SMSet.has(player.id)) {
				SMSet.add(player.id);
				setTimeout((number) => { SMSet.delete(number); }, slowMode * 1000, player.id);
			}
			else {
				return false;
			}
		}
	}

    // Special chat settings for Admin and specific players (Using nicks)
	else if (player.admin && player.name != botName) {
		var stats;
		localStorage.getItem(getAuth(player)) ? stats = JSON.parse(localStorage.getItem(getAuth(player))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", 0, "player", player.name, "", "", ""];
		room.sendAnnouncement("[" + stats[Ss.EMOJI] + "] " + player.name + ": " + message.join(" "), null, "0x" + stats[Ss.COLOR] , "bold", 1);
		return false;
	}

	else if (!player.admin) {
			/*room.sendAnnouncement(player.name + ": " + message.join(" ") , null , player.team == 1 ? 0xFF7438 : player.team == 0 ? 0xffffff : 0x2C6AC7, "normal", 1);*/
			room.sendAnnouncement((player.team == 1 ? "🔴 " + player.name + ": " + message.join(" ") : player.team == 0 ? player.name + ": " + message.join(" ") : "🔵 " + player.name + ": " + message.join(" ")), null , player.team == 1 ? 0xFF0000 : player.team == 0 ? 0xffffff : 0x2C6AC7, "normal", 1);
			return false;

	}

}

room.onPlayerActivity = function(player) {
	setActivity(player, 0);
}

room.onPlayerBallKick = function(player) {
	if (lastPlayersTouched[0] == null || player.id != lastPlayersTouched[0].id) {
		!activePlay ? activePlay = true : null;
		lastTeamTouched = player.team;
		lastPlayersTouched[1] = lastPlayersTouched[0];
		lastPlayersTouched[0] = player;
	}
}

/* GAME MANAGEMENT */

room.onGameStart = function(byPlayer) {
	game = new Game(Date.now(), room.getScores(), []);
	countAFK = true;
	activePlay = false;
	goldenGoal = false;
	endGameVariable = false;
	lastPlayersTouched = [null, null];
    Rposs = 0;
	Bposs = 0;
	GKList = [];
	allReds = [];
	allBlues = [];
	if (teamR.length == maxTeamSize && teamB.length == maxTeamSize) {
		for (var i = 0; i < maxTeamSize; i++) {
			allReds.push(teamR[i]);
			allBlues.push(teamB[i]);
		}
	}
	for (var i = 0; i < extendedP.length; i++) {
		extendedP[i][eP.GK] = 0;
		extendedP[i][eP.ACT] = 0;
		room.getPlayer(extendedP[i][eP.ID]) == null ? extendedP.splice(i, 1) : null;
	}
	deactivateChooseMode();
	reset_size(player_size);
}

room.onGameStop = function(byPlayer) {
	if (byPlayer.id == 0 && endGameVariable) {
		updateTeams();
		if (inChooseMode) {
			if (players.length == 2 * maxTeamSize) {
				inChooseMode = false;
				resetBtn();
				for (var i = 0; i < maxTeamSize; i++) {
					setTimeout(() => { randomBtn(); }, 400*i);
				}
				setTimeout(() => { room.startGame(); }, 2000);
			}
			else {
				if (lastWinner == Team.RED) {
					blueToSpecBtn();
				}
				else if (lastWinner == Team.BLUE) {
					redToSpecBtn();
					blueToRedBtn();
				}
				else {
					resetBtn();
				}
				setTimeout(() => { topBtn(); }, 500);
			}
		}
		else {
			if (players.length == 2) {
				if (lastWinner == Team.BLUE) {
					room.setPlayerTeam(teamB[0].id, Team.RED);
					room.setPlayerTeam(teamR[0].id, Team.BLUE);
				}
				setTimeout(() => { room.startGame(); }, 2000);
			}
			else if (players.length == 3 || players.length >= 2 * maxTeamSize + 1) {
				if (lastWinner == Team.RED) {
					blueToSpecBtn();
				}
				else {
					redToSpecBtn();
					blueToRedBtn();
				}
				setTimeout(() => { topBtn(); }, 200);
				setTimeout(() => { room.startGame(); }, 2000);
			}
			else if (players.length == 4) {
				resetBtn();
				setTimeout(() => { randomBtn(); setTimeout(() => { randomBtn(); }, 500); }, 500);
				setTimeout(() => { room.startGame(); }, 2000);
			}
			else if (players.length == 5 || players.length >= 2 * maxTeamSize + 1) {
				if (lastWinner == Team.RED) {
					blueToSpecBtn();
				}
				else {
					redToSpecBtn();
					blueToRedBtn();
				}
				setTimeout(() => { topBtn(); }, 200);
				activateChooseMode();
			}
			else if (players.length == 6) {
				resetBtn();
				setTimeout(() => { randomBtn(); setTimeout(() => { randomBtn(); setTimeout(() => { randomBtn(); }, 500); }, 500); }, 500);
				setTimeout(() => { room.startGame(); }, 2000);
			}
		}
	}
}


function change_size(player_size, team) {

	var players = room.getPlayerList();
	var team_players = players.filter((p) => p.team == team);
	
	for (var i = 0; i < team_players.length; i++) {
		room.setPlayerDiscProperties(team_players[i].id, {radius: player_size});
	}

}

function reset_size(player_size) {

	var players = room.getPlayerList();
	
	for (var i = 0; i < players.length; i++) {
		room.setPlayerDiscProperties(players[i].id, {radius: player_size});
	}

}



room.onGamePause = function(byPlayer) {
}

room.onGameUnpause = function (byPlayer) {
	if (teamR.length == 4 && teamB.length == 4 && inChooseMode || (teamR.length == teamB.length && teamS.length < 2 && inChooseMode)) {
		deactivateChooseMode();
	}
}

room.onTeamGoal = function(team) {
	activePlay = false;
	countAFK = false;
	const scores = room.getScores();
	game.scores = scores;
	if (lastPlayersTouched[0] != null && lastPlayersTouched[0].team == team) {
		
		if (lastPlayersTouched[1] != null && lastPlayersTouched[1].team == team) {
			room.sendAnnouncement("🔥 " + getTime(scores) + " Golazo de " + lastPlayersTouched[0].name + " ! Con paseson de " + lastPlayersTouched[1].name + ". Velocidad de tiro : " + ballSpeed.toPrecision(4).toString() + "km/h " + (team == Team.RED ? "🔴" : "🔵"), null, 0x4ffaff, "bold", 1);
			game.goals.push(new Goal(scores.time, team, lastPlayersTouched[0], lastPlayersTouched[1]));

			change_size(20, team);
		}
		else {
			room.sendAnnouncement("🔥 " + getTime(scores) + " Golazo de " + lastPlayersTouched[0].name + " ! Velocidad de tiro : " + ballSpeed.toPrecision(4).toString() + "km/h " + (team == Team.RED ? "🔴" : "🔵"), null, 0x4ffaff, "bold", 1);
			game.goals.push(new Goal(scores.time, team, lastPlayersTouched[0], null));
			
			change_size(20, team);
		}
	}
	else {
		room.sendAnnouncement("🤣 " + getTime(scores) + " " + lastPlayersTouched[0].name + " BEBÉ" + " ¿QUE FUÉ? 🙃 "+ " ! Velocidad de tiro : " + ballSpeed.toPrecision(4).toString() + "km/h " + (team == Team.RED ? "🔴" : "🔵"), null, 0x4ffaff, "bold", 1);
		game.goals.push(new Goal(scores.time, team, null, null));
	}
	if (scores.scoreLimit != 0 && (scores.red == scores.scoreLimit || scores.blue == scores.scoreLimit && scores.blue > 0 || goldenGoal == true)) {
		endGame(team);
		goldenGoal = false;
		setTimeout(() => { room.stopGame(); }, 1000);
	}
}

room.onPositionsReset = function() {
	countAFK = true;
	lastPlayersTouched = [null, null];
	reset_size(player_size);
}

/* MISCELLANEOUS */

room.onRoomLink = function(url) {
}

room.onPlayerAdminChange = function (changedPlayer, byPlayer) {
	if (getMute(changedPlayer) && changedPlayer.admin) {
		room.sendAnnouncement(changedPlayer.name + " ha sido desmuteado.");
		setMute(changedPlayer, false);
	}
	if (byPlayer.id != 0 && localStorage.getItem(getAuth(byPlayer)) && JSON.parse(localStorage.getItem(getAuth(byPlayer)))[Ss.RL] == "admin") {
		room.sendAnnouncement("No tienes permiso para nombrar a un jugador como Administrador !", byPlayer.id);
		room.setPlayerAdmin(changedPlayer.id, false);
	}
}

room.onStadiumChange = function(newStadiumName, byPlayer) {
}

room.onGameTick = function() {
	checkTime();
	getLastTouchOfTheBall();
	getStats();
	handleInactivity();
}
